<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/06/19/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>初识MySQL</title>
    <url>/2020/06/19/%E5%88%9D%E8%AF%86MySQL/</url>
    <content><![CDATA[<h2 id="初识MySQL"><a href="#初识MySQL" class="headerlink" title="初识MySQL"></a>初识MySQL</h2><h3 id="为什么要学习数据库"><a href="#为什么要学习数据库" class="headerlink" title="为什么要学习数据库"></a>为什么要学习数据库</h3><ol>
<li>数据库是JavaEE开发的必备技能</li>
<li>数据库能够保证数据的安全存储</li>
<li>数据是软件开发中的核心部分</li>
<li>数据库可以实现数据的持久化存储</li>
</ol>
<h3 id="什么是数据库"><a href="#什么是数据库" class="headerlink" title="什么是数据库"></a>什么是数据库</h3><p>数据库（DataBase，简称DB），是长期存储在计算机内的、有组织的、可共享的、统一管理的大量数据的集合。</p>
<p><strong>作用</strong>：安全地持久化并管理数据，减少数据的冗余</p>
<p><strong>数据库分类</strong></p>
<ul>
<li>关系型数据库<ul>
<li>常见的关系型数据库有：MySQL、SQL Server、Oracle等</li>
<li>关系型数据库通过外键来建立表与表之间的联系</li>
</ul>
</li>
<li>非关系型数据库<ul>
<li>常见的非关系型数据库：Redis、MongoDB等</li>
<li>非关系型数据库数据以对象的形式存在于数据库中，对象之间的关系通过对象的属性来实现</li>
</ul>
</li>
</ul>
<h3 id="什么是DBMS"><a href="#什么是DBMS" class="headerlink" title="什么是DBMS"></a>什么是DBMS</h3><p>DBMS：DataBase Management System，即数据库管理系统。是用于管理数据的计算机软件。</p>
<p><strong>作用</strong>：数据库管理系统使用户能方便地定义和操纵数据，维护数据的安全性和完整性，以及进行多用户下的并发控制和恢复数据库。</p>
<p>我们所学习的MySQL实际上是一个数据库管理系统！！！</p>
<h3 id="MySQL简介"><a href="#MySQL简介" class="headerlink" title="MySQL简介"></a>MySQL简介</h3><p>MySQL是一个<strong>开源</strong>、<strong>免费</strong>的<strong>关系型数据库</strong></p>
<p>MySQL由瑞典MySQL AB公司开发，现在属于Oracle旗下的产品。MySQL是现在<strong>最流行</strong>的关系型数据库管理系统之一！</p>
<p><strong>MySQL的官网</strong>：<a href="https://www.mysql.com/" target="_blank" rel="noopener">https://www.mysql.com/</a></p>
<h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><blockquote>
<p>这里介绍压缩版的MySQL的下载与安装</p>
</blockquote>
<p><font color="red">1、下载软件</font></p>
<p>我的电脑是win10 64位系统，所以下载的是MySQL 5.7 64位版本：<a href="https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.19-winx64.zip" target="_blank" rel="noopener">https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.19-winx64.zip</a></p>
<p><font color="red">2、安装步骤</font></p>
<ol>
<li><p>下载得到zip格式的压缩包</p>
</li>
<li><p>解压到自己平时安装开发环境的目录，我的目录是：<code>D:\environment</code></p>
</li>
<li><p>添加环境变量：计算机&rightarrow;右键属性&rightarrow;高级系统设置&rightarrow;环境变量</p>
<p>设置在Path环境变量中添加，bin目录对应的路径</p>
</li>
<li><p>编辑<code>my.ini</code>文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">basedir&#x3D;D:\environment\mysql-5.7.19-winx64\</span><br><span class="line">datadir&#x3D;D:\environment\mysql-5.7.19-winx64\data\</span><br><span class="line">port&#x3D;3306</span><br><span class="line">skip-grant-tables</span><br></pre></td></tr></table></figure>
</li>
<li><p>以管理员权限启动cmd，并切换至MySQL的bin目录下，然后输入<code>mysqld -install</code>（安装mysql）</p>
</li>
<li><p>再输入<code>mysqld -initialize-insecure</code>初始化数据文件</p>
</li>
<li><p>然后启动使用<code>net start mysql</code>启动mysql服务，使用命令mysql -uroot -p进入mysql管理界面（密码可为空）</p>
</li>
<li><p>进入界面后更改root密码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> mysql.user <span class="keyword">set</span> authentication_string=<span class="keyword">password</span>(<span class="string">'123456'</span>) <span class="keyword">where</span></span><br><span class="line"><span class="keyword">user</span>=<span class="string">'root'</span> <span class="keyword">and</span> Host = <span class="string">'localhost'</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>刷新权限</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改my.ini文件，删除<code>skip-grant-tables</code></p>
</li>
<li><p>重启mysql服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net stop mysql</span><br><span class="line">net start mysql</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试</p>
<img src= "/img/loading.gif" data-src="https://gitee.com/zxwscoffee/img/raw/master/img/image-20200620082752605.png" align="center"/>

</li>
</ol>
<h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>由于之前已经设置了环境变量，所以可以在任意位置是使用mysql中bin目录下的命令</p>
<p><strong>登录数据库的命令</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql [-h服务器主机地址] -u用户名 -p用户密码</span><br></pre></td></tr></table></figure>

<p>服务器地址可以省略，默认值为本机<code>localhost</code>，连接远程数据库时需要写上。</p>
<p><strong>基本的数据库操作命令</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> mysql.user <span class="keyword">set</span> authentication_string=<span class="keyword">password</span>(<span class="string">'123456'</span>) <span class="keyword">where</span></span><br><span class="line"><span class="keyword">user</span>=<span class="string">'root'</span> <span class="keyword">and</span> Host = <span class="string">'localhost'</span>; <span class="comment">--修改密码</span></span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;<span class="comment">--刷新mysql系统权限相关表</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;<span class="comment">--显示所有数据库</span></span><br><span class="line"><span class="keyword">use</span> 数据库名称;<span class="comment">--切换到指定名称的数据库</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;<span class="comment">--显示当前数据库中的所有表</span></span><br><span class="line">desc 表名;<span class="comment">--显示表结构</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 表名;<span class="comment">--显示创建表的语句</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名;<span class="comment">--创建指定名称的数据库</span></span><br><span class="line"></span><br><span class="line">exit; <span class="comment">--退出MySQL</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>操作数据库</title>
    <url>/2020/06/20/%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h2 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h2><h3 id="结构化从查询语句分类"><a href="#结构化从查询语句分类" class="headerlink" title="结构化从查询语句分类"></a>结构化从查询语句分类</h3><p><font color="red">1、DDL</font></p>
<p>DDL：Data Definition Language，数据定义语言，是用于描述数据库中要存储的现实世界实体的语言。</p>
<p><strong>作用</strong>：定义和管理数据对象，例如数据库、表等</p>
<p><strong>相关命令</strong>：CREATE、DROP、ALTER</p>
<p><font color="red">2、DML</font></p>
<p>DML：Data Manipulation Language，数据操纵语言，用户通过它可以实现对数据库的基本操作。</p>
<p><strong>作用</strong>：操作数据库对象所包含的数据</p>
<p><strong>相关命令</strong>：INSERT、UPDATE、DELETE</p>
<p><font color="red">3、DQL</font></p>
<p>DQL：Data Query Language，数据查询语言。</p>
<p><strong>作用</strong>：查询数据库中的数据</p>
<p><strong>相关命令</strong>：SELECT</p>
<p><font color="red">4、DCL</font></p>
<p>DCL：Data Control Language，数据控制语言。</p>
<p><strong>作用</strong>：用于管理数据库的语言，可对数据访问权进行控制的指令，它可以控制特定用户账户对数据表、查看表、存储程序、用户自定义函数等数据库对象的控制权。</p>
<p><strong>相关命令</strong>：GRANT、REVOKE、commit、rollback</p>
<h3 id="操作数据库-1"><a href="#操作数据库-1" class="headerlink" title="操作数据库"></a>操作数据库</h3><blockquote>
<p>命令行操作数据库</p>
</blockquote>
<p><strong>创建数据库</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] <span class="string">`数据库名`</span> [<span class="built_in">CHARACTER</span> <span class="keyword">SET</span> 字符集] [<span class="keyword">COLLATE</span> 数据库排序规则];</span><br></pre></td></tr></table></figure>

<p><strong>删除数据库</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> [<span class="keyword">IF</span> <span class="keyword">EXISTS</span>] <span class="string">`数据库名`</span>;</span><br></pre></td></tr></table></figure>

<p><strong>查看所有数据库</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>;</span><br></pre></td></tr></table></figure>

<p><strong>使用（切换到）数据库</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USE</span> <span class="string">`数据库名`</span>;</span><br></pre></td></tr></table></figure>



<blockquote>
<p>SQLyog学习数据库命令的方式</p>
</blockquote>
<p>下面将介绍如何通过SQLyog操作数据库，然后学习对应操作的数据库命令</p>
<p>以创建数据库一个名称为school的数据库为例：</p>
<ul>
<li><p>首先右键创建一个数据库</p>
<p><img src= "/img/loading.gif" data-src="https://gitee.com/zxwscoffee/img/raw/master/img/image-20200620103704632.png" alt="image-20200620103704632"></p>
</li>
<li><p>打开历史记录页面，查看创建数据库对应的语句</p>
<p><img src= "/img/loading.gif" data-src="https://gitee.com/zxwscoffee/img/raw/master/img/image-20200620103830427.png" alt="image-20200620103830427"></p>
</li>
</ul>
<h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><p>创建数据表属于DDL的一种，语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] <span class="string">`表名`</span> (</span><br><span class="line">    <span class="string">`字段名1`</span> 列类型 [属性][索引][注释], </span><br><span class="line">    <span class="string">`字段名2`</span> 列类型 [属性][索引][注释], </span><br><span class="line">    ...</span><br><span class="line">    <span class="string">`字段名n`</span> 列类型 [属性][索引][注释], </span><br><span class="line">)[表类型][表字符集][注释];</span><br></pre></td></tr></table></figure>

<p>反引号用于区分MySQL保留字和普通字符，使用了反引号则表示是普通字符。</p>
]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>DQL语言学习</title>
    <url>/2020/06/20/DQL%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="DQL语言学习"><a href="#DQL语言学习" class="headerlink" title="DQL语言学习"></a>DQL语言学习</h2><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><p>导入SQL脚本，创建用于练习的数据库<code>myemployees</code></p>
<p><code>myemployees.sql</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">SQLyog Ultimate v10.00 Beta1</span></span><br><span class="line"><span class="comment">MySQL - 5.5.15 : Database - myemployees</span></span><br><span class="line"><span class="comment">*********************************************************************</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40101 SET NAMES utf8 */</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40101 SET SQL_MODE=''*/</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */</span>;</span><br><span class="line"><span class="comment">/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */</span>;</span><br><span class="line"><span class="comment">/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="comment">/*!32312 IF NOT EXISTS*/</span><span class="string">`myemployees`</span> <span class="comment">/*!40100 DEFAULT CHARACTER SET gb2312 */</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">USE</span> <span class="string">`myemployees`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `departments` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`departments`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`departments`</span> (</span><br><span class="line">  <span class="string">`department_id`</span> <span class="built_in">int</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`department_name`</span> <span class="built_in">varchar</span>(<span class="number">3</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`manager_id`</span> <span class="built_in">int</span>(<span class="number">6</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`location_id`</span> <span class="built_in">int</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`department_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`loc_id_fk`</span> (<span class="string">`location_id`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`loc_id_fk`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`location_id`</span>) <span class="keyword">REFERENCES</span> <span class="string">`locations`</span> (<span class="string">`location_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">271</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=gb2312;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `departments` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`departments`</span>(<span class="string">`department_id`</span>,<span class="string">`department_name`</span>,<span class="string">`manager_id`</span>,<span class="string">`location_id`</span>) <span class="keyword">values</span> (<span class="number">10</span>,<span class="string">'Adm'</span>,<span class="number">200</span>,<span class="number">1700</span>),(<span class="number">20</span>,<span class="string">'Mar'</span>,<span class="number">201</span>,<span class="number">1800</span>),(<span class="number">30</span>,<span class="string">'Pur'</span>,<span class="number">114</span>,<span class="number">1700</span>),(<span class="number">40</span>,<span class="string">'Hum'</span>,<span class="number">203</span>,<span class="number">2400</span>),(<span class="number">50</span>,<span class="string">'Shi'</span>,<span class="number">121</span>,<span class="number">1500</span>),(<span class="number">60</span>,<span class="string">'IT'</span>,<span class="number">103</span>,<span class="number">1400</span>),(<span class="number">70</span>,<span class="string">'Pub'</span>,<span class="number">204</span>,<span class="number">2700</span>),(<span class="number">80</span>,<span class="string">'Sal'</span>,<span class="number">145</span>,<span class="number">2500</span>),(<span class="number">90</span>,<span class="string">'Exe'</span>,<span class="number">100</span>,<span class="number">1700</span>),(<span class="number">100</span>,<span class="string">'Fin'</span>,<span class="number">108</span>,<span class="number">1700</span>),(<span class="number">110</span>,<span class="string">'Acc'</span>,<span class="number">205</span>,<span class="number">1700</span>),(<span class="number">120</span>,<span class="string">'Tre'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">130</span>,<span class="string">'Cor'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">140</span>,<span class="string">'Con'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">150</span>,<span class="string">'Sha'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">160</span>,<span class="string">'Ben'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">170</span>,<span class="string">'Man'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">180</span>,<span class="string">'Con'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">190</span>,<span class="string">'Con'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">200</span>,<span class="string">'Ope'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">210</span>,<span class="string">'IT '</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">220</span>,<span class="string">'NOC'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">230</span>,<span class="string">'IT '</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">240</span>,<span class="string">'Gov'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">250</span>,<span class="string">'Ret'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">260</span>,<span class="string">'Rec'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>),(<span class="number">270</span>,<span class="string">'Pay'</span>,<span class="literal">NULL</span>,<span class="number">1700</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `employees` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`employees`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`employees`</span> (</span><br><span class="line">  <span class="string">`employee_id`</span> <span class="built_in">int</span>(<span class="number">6</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`first_name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`last_name`</span> <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`email`</span> <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`phone_number`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`job_id`</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`salary`</span> <span class="keyword">double</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`commission_pct`</span> <span class="keyword">double</span>(<span class="number">4</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`manager_id`</span> <span class="built_in">int</span>(<span class="number">6</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`department_id`</span> <span class="built_in">int</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`hiredate`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`employee_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`dept_id_fk`</span> (<span class="string">`department_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`job_id_fk`</span> (<span class="string">`job_id`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`dept_id_fk`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`department_id`</span>) <span class="keyword">REFERENCES</span> <span class="string">`departments`</span> (<span class="string">`department_id`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`job_id_fk`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`job_id`</span>) <span class="keyword">REFERENCES</span> <span class="string">`jobs`</span> (<span class="string">`job_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">207</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=gb2312;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `employees` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`employees`</span>(<span class="string">`employee_id`</span>,<span class="string">`first_name`</span>,<span class="string">`last_name`</span>,<span class="string">`email`</span>,<span class="string">`phone_number`</span>,<span class="string">`job_id`</span>,<span class="string">`salary`</span>,<span class="string">`commission_pct`</span>,<span class="string">`manager_id`</span>,<span class="string">`department_id`</span>,<span class="string">`hiredate`</span>) <span class="keyword">values</span> (<span class="number">100</span>,<span class="string">'Steven'</span>,<span class="string">'K_ing'</span>,<span class="string">'SKING'</span>,<span class="string">'515.123.4567'</span>,<span class="string">'AD_PRES'</span>,<span class="number">24000.00</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="number">90</span>,<span class="string">'1992-04-03 00:00:00'</span>),(<span class="number">101</span>,<span class="string">'Neena'</span>,<span class="string">'Kochhar'</span>,<span class="string">'NKOCHHAR'</span>,<span class="string">'515.123.4568'</span>,<span class="string">'AD_VP'</span>,<span class="number">17000.00</span>,<span class="literal">NULL</span>,<span class="number">100</span>,<span class="number">90</span>,<span class="string">'1992-04-03 00:00:00'</span>),(<span class="number">102</span>,<span class="string">'Lex'</span>,<span class="string">'De Haan'</span>,<span class="string">'LDEHAAN'</span>,<span class="string">'515.123.4569'</span>,<span class="string">'AD_VP'</span>,<span class="number">17000.00</span>,<span class="literal">NULL</span>,<span class="number">100</span>,<span class="number">90</span>,<span class="string">'1992-04-03 00:00:00'</span>),(<span class="number">103</span>,<span class="string">'Alexander'</span>,<span class="string">'Hunold'</span>,<span class="string">'AHUNOLD'</span>,<span class="string">'590.423.4567'</span>,<span class="string">'IT_PROG'</span>,<span class="number">9000.00</span>,<span class="literal">NULL</span>,<span class="number">102</span>,<span class="number">60</span>,<span class="string">'1992-04-03 00:00:00'</span>),(<span class="number">104</span>,<span class="string">'Bruce'</span>,<span class="string">'Ernst'</span>,<span class="string">'BERNST'</span>,<span class="string">'590.423.4568'</span>,<span class="string">'IT_PROG'</span>,<span class="number">6000.00</span>,<span class="literal">NULL</span>,<span class="number">103</span>,<span class="number">60</span>,<span class="string">'1992-04-03 00:00:00'</span>),(<span class="number">105</span>,<span class="string">'David'</span>,<span class="string">'Austin'</span>,<span class="string">'DAUSTIN'</span>,<span class="string">'590.423.4569'</span>,<span class="string">'IT_PROG'</span>,<span class="number">4800.00</span>,<span class="literal">NULL</span>,<span class="number">103</span>,<span class="number">60</span>,<span class="string">'1998-03-03 00:00:00'</span>),(<span class="number">106</span>,<span class="string">'Valli'</span>,<span class="string">'Pataballa'</span>,<span class="string">'VPATABAL'</span>,<span class="string">'590.423.4560'</span>,<span class="string">'IT_PROG'</span>,<span class="number">4800.00</span>,<span class="literal">NULL</span>,<span class="number">103</span>,<span class="number">60</span>,<span class="string">'1998-03-03 00:00:00'</span>),(<span class="number">107</span>,<span class="string">'Diana'</span>,<span class="string">'Lorentz'</span>,<span class="string">'DLORENTZ'</span>,<span class="string">'590.423.5567'</span>,<span class="string">'IT_PROG'</span>,<span class="number">4200.00</span>,<span class="literal">NULL</span>,<span class="number">103</span>,<span class="number">60</span>,<span class="string">'1998-03-03 00:00:00'</span>),(<span class="number">108</span>,<span class="string">'Nancy'</span>,<span class="string">'Greenberg'</span>,<span class="string">'NGREENBE'</span>,<span class="string">'515.124.4569'</span>,<span class="string">'FI_MGR'</span>,<span class="number">12000.00</span>,<span class="literal">NULL</span>,<span class="number">101</span>,<span class="number">100</span>,<span class="string">'1998-03-03 00:00:00'</span>),(<span class="number">109</span>,<span class="string">'Daniel'</span>,<span class="string">'Faviet'</span>,<span class="string">'DFAVIET'</span>,<span class="string">'515.124.4169'</span>,<span class="string">'FI_ACCOUNT'</span>,<span class="number">9000.00</span>,<span class="literal">NULL</span>,<span class="number">108</span>,<span class="number">100</span>,<span class="string">'1998-03-03 00:00:00'</span>),(<span class="number">110</span>,<span class="string">'John'</span>,<span class="string">'Chen'</span>,<span class="string">'JCHEN'</span>,<span class="string">'515.124.4269'</span>,<span class="string">'FI_ACCOUNT'</span>,<span class="number">8200.00</span>,<span class="literal">NULL</span>,<span class="number">108</span>,<span class="number">100</span>,<span class="string">'2000-09-09 00:00:00'</span>),(<span class="number">111</span>,<span class="string">'Ismael'</span>,<span class="string">'Sciarra'</span>,<span class="string">'ISCIARRA'</span>,<span class="string">'515.124.4369'</span>,<span class="string">'FI_ACCOUNT'</span>,<span class="number">7700.00</span>,<span class="literal">NULL</span>,<span class="number">108</span>,<span class="number">100</span>,<span class="string">'2000-09-09 00:00:00'</span>),(<span class="number">112</span>,<span class="string">'Jose Manuel'</span>,<span class="string">'Urman'</span>,<span class="string">'JMURMAN'</span>,<span class="string">'515.124.4469'</span>,<span class="string">'FI_ACCOUNT'</span>,<span class="number">7800.00</span>,<span class="literal">NULL</span>,<span class="number">108</span>,<span class="number">100</span>,<span class="string">'2000-09-09 00:00:00'</span>),(<span class="number">113</span>,<span class="string">'Luis'</span>,<span class="string">'Popp'</span>,<span class="string">'LPOPP'</span>,<span class="string">'515.124.4567'</span>,<span class="string">'FI_ACCOUNT'</span>,<span class="number">6900.00</span>,<span class="literal">NULL</span>,<span class="number">108</span>,<span class="number">100</span>,<span class="string">'2000-09-09 00:00:00'</span>),(<span class="number">114</span>,<span class="string">'Den'</span>,<span class="string">'Raphaely'</span>,<span class="string">'DRAPHEAL'</span>,<span class="string">'515.127.4561'</span>,<span class="string">'PU_MAN'</span>,<span class="number">11000.00</span>,<span class="literal">NULL</span>,<span class="number">100</span>,<span class="number">30</span>,<span class="string">'2000-09-09 00:00:00'</span>),(<span class="number">115</span>,<span class="string">'Alexander'</span>,<span class="string">'Khoo'</span>,<span class="string">'AKHOO'</span>,<span class="string">'515.127.4562'</span>,<span class="string">'PU_CLERK'</span>,<span class="number">3100.00</span>,<span class="literal">NULL</span>,<span class="number">114</span>,<span class="number">30</span>,<span class="string">'2000-09-09 00:00:00'</span>),(<span class="number">116</span>,<span class="string">'Shelli'</span>,<span class="string">'Baida'</span>,<span class="string">'SBAIDA'</span>,<span class="string">'515.127.4563'</span>,<span class="string">'PU_CLERK'</span>,<span class="number">2900.00</span>,<span class="literal">NULL</span>,<span class="number">114</span>,<span class="number">30</span>,<span class="string">'2000-09-09 00:00:00'</span>),(<span class="number">117</span>,<span class="string">'Sigal'</span>,<span class="string">'Tobias'</span>,<span class="string">'STOBIAS'</span>,<span class="string">'515.127.4564'</span>,<span class="string">'PU_CLERK'</span>,<span class="number">2800.00</span>,<span class="literal">NULL</span>,<span class="number">114</span>,<span class="number">30</span>,<span class="string">'2000-09-09 00:00:00'</span>),(<span class="number">118</span>,<span class="string">'Guy'</span>,<span class="string">'Himuro'</span>,<span class="string">'GHIMURO'</span>,<span class="string">'515.127.4565'</span>,<span class="string">'PU_CLERK'</span>,<span class="number">2600.00</span>,<span class="literal">NULL</span>,<span class="number">114</span>,<span class="number">30</span>,<span class="string">'2000-09-09 00:00:00'</span>),(<span class="number">119</span>,<span class="string">'Karen'</span>,<span class="string">'Colmenares'</span>,<span class="string">'KCOLMENA'</span>,<span class="string">'515.127.4566'</span>,<span class="string">'PU_CLERK'</span>,<span class="number">2500.00</span>,<span class="literal">NULL</span>,<span class="number">114</span>,<span class="number">30</span>,<span class="string">'2000-09-09 00:00:00'</span>),(<span class="number">120</span>,<span class="string">'Matthew'</span>,<span class="string">'Weiss'</span>,<span class="string">'MWEISS'</span>,<span class="string">'650.123.1234'</span>,<span class="string">'ST_MAN'</span>,<span class="number">8000.00</span>,<span class="literal">NULL</span>,<span class="number">100</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">121</span>,<span class="string">'Adam'</span>,<span class="string">'Fripp'</span>,<span class="string">'AFRIPP'</span>,<span class="string">'650.123.2234'</span>,<span class="string">'ST_MAN'</span>,<span class="number">8200.00</span>,<span class="literal">NULL</span>,<span class="number">100</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">122</span>,<span class="string">'Payam'</span>,<span class="string">'Kaufling'</span>,<span class="string">'PKAUFLIN'</span>,<span class="string">'650.123.3234'</span>,<span class="string">'ST_MAN'</span>,<span class="number">7900.00</span>,<span class="literal">NULL</span>,<span class="number">100</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">123</span>,<span class="string">'Shanta'</span>,<span class="string">'Vollman'</span>,<span class="string">'SVOLLMAN'</span>,<span class="string">'650.123.4234'</span>,<span class="string">'ST_MAN'</span>,<span class="number">6500.00</span>,<span class="literal">NULL</span>,<span class="number">100</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">124</span>,<span class="string">'Kevin'</span>,<span class="string">'Mourgos'</span>,<span class="string">'KMOURGOS'</span>,<span class="string">'650.123.5234'</span>,<span class="string">'ST_MAN'</span>,<span class="number">5800.00</span>,<span class="literal">NULL</span>,<span class="number">100</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">125</span>,<span class="string">'Julia'</span>,<span class="string">'Nayer'</span>,<span class="string">'JNAYER'</span>,<span class="string">'650.124.1214'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">3200.00</span>,<span class="literal">NULL</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">126</span>,<span class="string">'Irene'</span>,<span class="string">'Mikkilineni'</span>,<span class="string">'IMIKKILI'</span>,<span class="string">'650.124.1224'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">2700.00</span>,<span class="literal">NULL</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">127</span>,<span class="string">'James'</span>,<span class="string">'Landry'</span>,<span class="string">'JLANDRY'</span>,<span class="string">'650.124.1334'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">2400.00</span>,<span class="literal">NULL</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">128</span>,<span class="string">'Steven'</span>,<span class="string">'Markle'</span>,<span class="string">'SMARKLE'</span>,<span class="string">'650.124.1434'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">2200.00</span>,<span class="literal">NULL</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">129</span>,<span class="string">'Laura'</span>,<span class="string">'Bissot'</span>,<span class="string">'LBISSOT'</span>,<span class="string">'650.124.5234'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">3300.00</span>,<span class="literal">NULL</span>,<span class="number">121</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">130</span>,<span class="string">'Mozhe'</span>,<span class="string">'Atkinson'</span>,<span class="string">'MATKINSO'</span>,<span class="string">'650.124.6234'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">2800.00</span>,<span class="literal">NULL</span>,<span class="number">121</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">131</span>,<span class="string">'James'</span>,<span class="string">'Marlow'</span>,<span class="string">'JAMRLOW'</span>,<span class="string">'650.124.7234'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">2500.00</span>,<span class="literal">NULL</span>,<span class="number">121</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">132</span>,<span class="string">'TJ'</span>,<span class="string">'Olson'</span>,<span class="string">'TJOLSON'</span>,<span class="string">'650.124.8234'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">2100.00</span>,<span class="literal">NULL</span>,<span class="number">121</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">133</span>,<span class="string">'Jason'</span>,<span class="string">'Mallin'</span>,<span class="string">'JMALLIN'</span>,<span class="string">'650.127.1934'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">3300.00</span>,<span class="literal">NULL</span>,<span class="number">122</span>,<span class="number">50</span>,<span class="string">'2004-02-06 00:00:00'</span>),(<span class="number">134</span>,<span class="string">'Michael'</span>,<span class="string">'Rogers'</span>,<span class="string">'MROGERS'</span>,<span class="string">'650.127.1834'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">2900.00</span>,<span class="literal">NULL</span>,<span class="number">122</span>,<span class="number">50</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">135</span>,<span class="string">'Ki'</span>,<span class="string">'Gee'</span>,<span class="string">'KGEE'</span>,<span class="string">'650.127.1734'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">2400.00</span>,<span class="literal">NULL</span>,<span class="number">122</span>,<span class="number">50</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">136</span>,<span class="string">'Hazel'</span>,<span class="string">'Philtanker'</span>,<span class="string">'HPHILTAN'</span>,<span class="string">'650.127.1634'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">2200.00</span>,<span class="literal">NULL</span>,<span class="number">122</span>,<span class="number">50</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">137</span>,<span class="string">'Renske'</span>,<span class="string">'Ladwig'</span>,<span class="string">'RLADWIG'</span>,<span class="string">'650.121.1234'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">3600.00</span>,<span class="literal">NULL</span>,<span class="number">123</span>,<span class="number">50</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">138</span>,<span class="string">'Stephen'</span>,<span class="string">'Stiles'</span>,<span class="string">'SSTILES'</span>,<span class="string">'650.121.2034'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">3200.00</span>,<span class="literal">NULL</span>,<span class="number">123</span>,<span class="number">50</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">139</span>,<span class="string">'John'</span>,<span class="string">'Seo'</span>,<span class="string">'JSEO'</span>,<span class="string">'650.121.2019'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">2700.00</span>,<span class="literal">NULL</span>,<span class="number">123</span>,<span class="number">50</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">140</span>,<span class="string">'Joshua'</span>,<span class="string">'Patel'</span>,<span class="string">'JPATEL'</span>,<span class="string">'650.121.1834'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">2500.00</span>,<span class="literal">NULL</span>,<span class="number">123</span>,<span class="number">50</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">141</span>,<span class="string">'Trenna'</span>,<span class="string">'Rajs'</span>,<span class="string">'TRAJS'</span>,<span class="string">'650.121.8009'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">3500.00</span>,<span class="literal">NULL</span>,<span class="number">124</span>,<span class="number">50</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">142</span>,<span class="string">'Curtis'</span>,<span class="string">'Davies'</span>,<span class="string">'CDAVIES'</span>,<span class="string">'650.121.2994'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">3100.00</span>,<span class="literal">NULL</span>,<span class="number">124</span>,<span class="number">50</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">143</span>,<span class="string">'Randall'</span>,<span class="string">'Matos'</span>,<span class="string">'RMATOS'</span>,<span class="string">'650.121.2874'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">2600.00</span>,<span class="literal">NULL</span>,<span class="number">124</span>,<span class="number">50</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">144</span>,<span class="string">'Peter'</span>,<span class="string">'Vargas'</span>,<span class="string">'PVARGAS'</span>,<span class="string">'650.121.2004'</span>,<span class="string">'ST_CLERK'</span>,<span class="number">2500.00</span>,<span class="literal">NULL</span>,<span class="number">124</span>,<span class="number">50</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">145</span>,<span class="string">'John'</span>,<span class="string">'Russell'</span>,<span class="string">'JRUSSEL'</span>,<span class="string">'011.44.1344.429268'</span>,<span class="string">'SA_MAN'</span>,<span class="number">14000.00</span>,<span class="number">0.40</span>,<span class="number">100</span>,<span class="number">80</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">146</span>,<span class="string">'Karen'</span>,<span class="string">'Partners'</span>,<span class="string">'KPARTNER'</span>,<span class="string">'011.44.1344.467268'</span>,<span class="string">'SA_MAN'</span>,<span class="number">13500.00</span>,<span class="number">0.30</span>,<span class="number">100</span>,<span class="number">80</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">147</span>,<span class="string">'Alberto'</span>,<span class="string">'Errazuriz'</span>,<span class="string">'AERRAZUR'</span>,<span class="string">'011.44.1344.429278'</span>,<span class="string">'SA_MAN'</span>,<span class="number">12000.00</span>,<span class="number">0.30</span>,<span class="number">100</span>,<span class="number">80</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">148</span>,<span class="string">'Gerald'</span>,<span class="string">'Cambrault'</span>,<span class="string">'GCAMBRAU'</span>,<span class="string">'011.44.1344.619268'</span>,<span class="string">'SA_MAN'</span>,<span class="number">11000.00</span>,<span class="number">0.30</span>,<span class="number">100</span>,<span class="number">80</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">149</span>,<span class="string">'Eleni'</span>,<span class="string">'Zlotkey'</span>,<span class="string">'EZLOTKEY'</span>,<span class="string">'011.44.1344.429018'</span>,<span class="string">'SA_MAN'</span>,<span class="number">10500.00</span>,<span class="number">0.20</span>,<span class="number">100</span>,<span class="number">80</span>,<span class="string">'2002-12-23 00:00:00'</span>),(<span class="number">150</span>,<span class="string">'Peter'</span>,<span class="string">'Tucker'</span>,<span class="string">'PTUCKER'</span>,<span class="string">'011.44.1344.129268'</span>,<span class="string">'SA_REP'</span>,<span class="number">10000.00</span>,<span class="number">0.30</span>,<span class="number">145</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">151</span>,<span class="string">'David'</span>,<span class="string">'Bernstein'</span>,<span class="string">'DBERNSTE'</span>,<span class="string">'011.44.1344.345268'</span>,<span class="string">'SA_REP'</span>,<span class="number">9500.00</span>,<span class="number">0.25</span>,<span class="number">145</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">152</span>,<span class="string">'Peter'</span>,<span class="string">'Hall'</span>,<span class="string">'PHALL'</span>,<span class="string">'011.44.1344.478968'</span>,<span class="string">'SA_REP'</span>,<span class="number">9000.00</span>,<span class="number">0.25</span>,<span class="number">145</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">153</span>,<span class="string">'Christopher'</span>,<span class="string">'Olsen'</span>,<span class="string">'COLSEN'</span>,<span class="string">'011.44.1344.498718'</span>,<span class="string">'SA_REP'</span>,<span class="number">8000.00</span>,<span class="number">0.20</span>,<span class="number">145</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">154</span>,<span class="string">'Nanette'</span>,<span class="string">'Cambrault'</span>,<span class="string">'NCAMBRAU'</span>,<span class="string">'011.44.1344.987668'</span>,<span class="string">'SA_REP'</span>,<span class="number">7500.00</span>,<span class="number">0.20</span>,<span class="number">145</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">155</span>,<span class="string">'Oliver'</span>,<span class="string">'Tuvault'</span>,<span class="string">'OTUVAULT'</span>,<span class="string">'011.44.1344.486508'</span>,<span class="string">'SA_REP'</span>,<span class="number">7000.00</span>,<span class="number">0.15</span>,<span class="number">145</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">156</span>,<span class="string">'Janette'</span>,<span class="string">'K_ing'</span>,<span class="string">'JKING'</span>,<span class="string">'011.44.1345.429268'</span>,<span class="string">'SA_REP'</span>,<span class="number">10000.00</span>,<span class="number">0.35</span>,<span class="number">146</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">157</span>,<span class="string">'Patrick'</span>,<span class="string">'Sully'</span>,<span class="string">'PSULLY'</span>,<span class="string">'011.44.1345.929268'</span>,<span class="string">'SA_REP'</span>,<span class="number">9500.00</span>,<span class="number">0.35</span>,<span class="number">146</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">158</span>,<span class="string">'Allan'</span>,<span class="string">'McEwen'</span>,<span class="string">'AMCEWEN'</span>,<span class="string">'011.44.1345.829268'</span>,<span class="string">'SA_REP'</span>,<span class="number">9000.00</span>,<span class="number">0.35</span>,<span class="number">146</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">159</span>,<span class="string">'Lindsey'</span>,<span class="string">'Smith'</span>,<span class="string">'LSMITH'</span>,<span class="string">'011.44.1345.729268'</span>,<span class="string">'SA_REP'</span>,<span class="number">8000.00</span>,<span class="number">0.30</span>,<span class="number">146</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">160</span>,<span class="string">'Louise'</span>,<span class="string">'Doran'</span>,<span class="string">'LDORAN'</span>,<span class="string">'011.44.1345.629268'</span>,<span class="string">'SA_REP'</span>,<span class="number">7500.00</span>,<span class="number">0.30</span>,<span class="number">146</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">161</span>,<span class="string">'Sarath'</span>,<span class="string">'Sewall'</span>,<span class="string">'SSEWALL'</span>,<span class="string">'011.44.1345.529268'</span>,<span class="string">'SA_REP'</span>,<span class="number">7000.00</span>,<span class="number">0.25</span>,<span class="number">146</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">162</span>,<span class="string">'Clara'</span>,<span class="string">'Vishney'</span>,<span class="string">'CVISHNEY'</span>,<span class="string">'011.44.1346.129268'</span>,<span class="string">'SA_REP'</span>,<span class="number">10500.00</span>,<span class="number">0.25</span>,<span class="number">147</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">163</span>,<span class="string">'Danielle'</span>,<span class="string">'Greene'</span>,<span class="string">'DGREENE'</span>,<span class="string">'011.44.1346.229268'</span>,<span class="string">'SA_REP'</span>,<span class="number">9500.00</span>,<span class="number">0.15</span>,<span class="number">147</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">164</span>,<span class="string">'Mattea'</span>,<span class="string">'Marvins'</span>,<span class="string">'MMARVINS'</span>,<span class="string">'011.44.1346.329268'</span>,<span class="string">'SA_REP'</span>,<span class="number">7200.00</span>,<span class="number">0.10</span>,<span class="number">147</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">165</span>,<span class="string">'David'</span>,<span class="string">'Lee'</span>,<span class="string">'DLEE'</span>,<span class="string">'011.44.1346.529268'</span>,<span class="string">'SA_REP'</span>,<span class="number">6800.00</span>,<span class="number">0.10</span>,<span class="number">147</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">166</span>,<span class="string">'Sundar'</span>,<span class="string">'Ande'</span>,<span class="string">'SANDE'</span>,<span class="string">'011.44.1346.629268'</span>,<span class="string">'SA_REP'</span>,<span class="number">6400.00</span>,<span class="number">0.10</span>,<span class="number">147</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">167</span>,<span class="string">'Amit'</span>,<span class="string">'Banda'</span>,<span class="string">'ABANDA'</span>,<span class="string">'011.44.1346.729268'</span>,<span class="string">'SA_REP'</span>,<span class="number">6200.00</span>,<span class="number">0.10</span>,<span class="number">147</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">168</span>,<span class="string">'Lisa'</span>,<span class="string">'Ozer'</span>,<span class="string">'LOZER'</span>,<span class="string">'011.44.1343.929268'</span>,<span class="string">'SA_REP'</span>,<span class="number">11500.00</span>,<span class="number">0.25</span>,<span class="number">148</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">169</span>,<span class="string">'Harrison'</span>,<span class="string">'Bloom'</span>,<span class="string">'HBLOOM'</span>,<span class="string">'011.44.1343.829268'</span>,<span class="string">'SA_REP'</span>,<span class="number">10000.00</span>,<span class="number">0.20</span>,<span class="number">148</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">170</span>,<span class="string">'Tayler'</span>,<span class="string">'Fox'</span>,<span class="string">'TFOX'</span>,<span class="string">'011.44.1343.729268'</span>,<span class="string">'SA_REP'</span>,<span class="number">9600.00</span>,<span class="number">0.20</span>,<span class="number">148</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">171</span>,<span class="string">'William'</span>,<span class="string">'Smith'</span>,<span class="string">'WSMITH'</span>,<span class="string">'011.44.1343.629268'</span>,<span class="string">'SA_REP'</span>,<span class="number">7400.00</span>,<span class="number">0.15</span>,<span class="number">148</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">172</span>,<span class="string">'Elizabeth'</span>,<span class="string">'Bates'</span>,<span class="string">'EBATES'</span>,<span class="string">'011.44.1343.529268'</span>,<span class="string">'SA_REP'</span>,<span class="number">7300.00</span>,<span class="number">0.15</span>,<span class="number">148</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">173</span>,<span class="string">'Sundita'</span>,<span class="string">'Kumar'</span>,<span class="string">'SKUMAR'</span>,<span class="string">'011.44.1343.329268'</span>,<span class="string">'SA_REP'</span>,<span class="number">6100.00</span>,<span class="number">0.10</span>,<span class="number">148</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">174</span>,<span class="string">'Ellen'</span>,<span class="string">'Abel'</span>,<span class="string">'EABEL'</span>,<span class="string">'011.44.1644.429267'</span>,<span class="string">'SA_REP'</span>,<span class="number">11000.00</span>,<span class="number">0.30</span>,<span class="number">149</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">175</span>,<span class="string">'Alyssa'</span>,<span class="string">'Hutton'</span>,<span class="string">'AHUTTON'</span>,<span class="string">'011.44.1644.429266'</span>,<span class="string">'SA_REP'</span>,<span class="number">8800.00</span>,<span class="number">0.25</span>,<span class="number">149</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">176</span>,<span class="string">'Jonathon'</span>,<span class="string">'Taylor'</span>,<span class="string">'JTAYLOR'</span>,<span class="string">'011.44.1644.429265'</span>,<span class="string">'SA_REP'</span>,<span class="number">8600.00</span>,<span class="number">0.20</span>,<span class="number">149</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">177</span>,<span class="string">'Jack'</span>,<span class="string">'Livingston'</span>,<span class="string">'JLIVINGS'</span>,<span class="string">'011.44.1644.429264'</span>,<span class="string">'SA_REP'</span>,<span class="number">8400.00</span>,<span class="number">0.20</span>,<span class="number">149</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">178</span>,<span class="string">'Kimberely'</span>,<span class="string">'Grant'</span>,<span class="string">'KGRANT'</span>,<span class="string">'011.44.1644.429263'</span>,<span class="string">'SA_REP'</span>,<span class="number">7000.00</span>,<span class="number">0.15</span>,<span class="number">149</span>,<span class="literal">NULL</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">179</span>,<span class="string">'Charles'</span>,<span class="string">'Johnson'</span>,<span class="string">'CJOHNSON'</span>,<span class="string">'011.44.1644.429262'</span>,<span class="string">'SA_REP'</span>,<span class="number">6200.00</span>,<span class="number">0.10</span>,<span class="number">149</span>,<span class="number">80</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">180</span>,<span class="string">'Winston'</span>,<span class="string">'Taylor'</span>,<span class="string">'WTAYLOR'</span>,<span class="string">'650.507.9876'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">3200.00</span>,<span class="literal">NULL</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">181</span>,<span class="string">'Jean'</span>,<span class="string">'Fleaur'</span>,<span class="string">'JFLEAUR'</span>,<span class="string">'650.507.9877'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">3100.00</span>,<span class="literal">NULL</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">182</span>,<span class="string">'Martha'</span>,<span class="string">'Sullivan'</span>,<span class="string">'MSULLIVA'</span>,<span class="string">'650.507.9878'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">2500.00</span>,<span class="literal">NULL</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">183</span>,<span class="string">'Girard'</span>,<span class="string">'Geoni'</span>,<span class="string">'GGEONI'</span>,<span class="string">'650.507.9879'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">2800.00</span>,<span class="literal">NULL</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">184</span>,<span class="string">'Nandita'</span>,<span class="string">'Sarchand'</span>,<span class="string">'NSARCHAN'</span>,<span class="string">'650.509.1876'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">4200.00</span>,<span class="literal">NULL</span>,<span class="number">121</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">185</span>,<span class="string">'Alexis'</span>,<span class="string">'Bull'</span>,<span class="string">'ABULL'</span>,<span class="string">'650.509.2876'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">4100.00</span>,<span class="literal">NULL</span>,<span class="number">121</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">186</span>,<span class="string">'Julia'</span>,<span class="string">'Dellinger'</span>,<span class="string">'JDELLING'</span>,<span class="string">'650.509.3876'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">3400.00</span>,<span class="literal">NULL</span>,<span class="number">121</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">187</span>,<span class="string">'Anthony'</span>,<span class="string">'Cabrio'</span>,<span class="string">'ACABRIO'</span>,<span class="string">'650.509.4876'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">3000.00</span>,<span class="literal">NULL</span>,<span class="number">121</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">188</span>,<span class="string">'Kelly'</span>,<span class="string">'Chung'</span>,<span class="string">'KCHUNG'</span>,<span class="string">'650.505.1876'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">3800.00</span>,<span class="literal">NULL</span>,<span class="number">122</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">189</span>,<span class="string">'Jennifer'</span>,<span class="string">'Dilly'</span>,<span class="string">'JDILLY'</span>,<span class="string">'650.505.2876'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">3600.00</span>,<span class="literal">NULL</span>,<span class="number">122</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">190</span>,<span class="string">'Timothy'</span>,<span class="string">'Gates'</span>,<span class="string">'TGATES'</span>,<span class="string">'650.505.3876'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">2900.00</span>,<span class="literal">NULL</span>,<span class="number">122</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">191</span>,<span class="string">'Randall'</span>,<span class="string">'Perkins'</span>,<span class="string">'RPERKINS'</span>,<span class="string">'650.505.4876'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">2500.00</span>,<span class="literal">NULL</span>,<span class="number">122</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">192</span>,<span class="string">'Sarah'</span>,<span class="string">'Bell'</span>,<span class="string">'SBELL'</span>,<span class="string">'650.501.1876'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">4000.00</span>,<span class="literal">NULL</span>,<span class="number">123</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">193</span>,<span class="string">'Britney'</span>,<span class="string">'Everett'</span>,<span class="string">'BEVERETT'</span>,<span class="string">'650.501.2876'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">3900.00</span>,<span class="literal">NULL</span>,<span class="number">123</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">194</span>,<span class="string">'Samuel'</span>,<span class="string">'McCain'</span>,<span class="string">'SMCCAIN'</span>,<span class="string">'650.501.3876'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">3200.00</span>,<span class="literal">NULL</span>,<span class="number">123</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">195</span>,<span class="string">'Vance'</span>,<span class="string">'Jones'</span>,<span class="string">'VJONES'</span>,<span class="string">'650.501.4876'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">2800.00</span>,<span class="literal">NULL</span>,<span class="number">123</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">196</span>,<span class="string">'Alana'</span>,<span class="string">'Walsh'</span>,<span class="string">'AWALSH'</span>,<span class="string">'650.507.9811'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">3100.00</span>,<span class="literal">NULL</span>,<span class="number">124</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">197</span>,<span class="string">'Kevin'</span>,<span class="string">'Feeney'</span>,<span class="string">'KFEENEY'</span>,<span class="string">'650.507.9822'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">3000.00</span>,<span class="literal">NULL</span>,<span class="number">124</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">198</span>,<span class="string">'Donald'</span>,<span class="string">'OConnell'</span>,<span class="string">'DOCONNEL'</span>,<span class="string">'650.507.9833'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">2600.00</span>,<span class="literal">NULL</span>,<span class="number">124</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">199</span>,<span class="string">'Douglas'</span>,<span class="string">'Grant'</span>,<span class="string">'DGRANT'</span>,<span class="string">'650.507.9844'</span>,<span class="string">'SH_CLERK'</span>,<span class="number">2600.00</span>,<span class="literal">NULL</span>,<span class="number">124</span>,<span class="number">50</span>,<span class="string">'2014-03-05 00:00:00'</span>),(<span class="number">200</span>,<span class="string">'Jennifer'</span>,<span class="string">'Whalen'</span>,<span class="string">'JWHALEN'</span>,<span class="string">'515.123.4444'</span>,<span class="string">'AD_ASST'</span>,<span class="number">4400.00</span>,<span class="literal">NULL</span>,<span class="number">101</span>,<span class="number">10</span>,<span class="string">'2016-03-03 00:00:00'</span>),(<span class="number">201</span>,<span class="string">'Michael'</span>,<span class="string">'Hartstein'</span>,<span class="string">'MHARTSTE'</span>,<span class="string">'515.123.5555'</span>,<span class="string">'MK_MAN'</span>,<span class="number">13000.00</span>,<span class="literal">NULL</span>,<span class="number">100</span>,<span class="number">20</span>,<span class="string">'2016-03-03 00:00:00'</span>),(<span class="number">202</span>,<span class="string">'Pat'</span>,<span class="string">'Fay'</span>,<span class="string">'PFAY'</span>,<span class="string">'603.123.6666'</span>,<span class="string">'MK_REP'</span>,<span class="number">6000.00</span>,<span class="literal">NULL</span>,<span class="number">201</span>,<span class="number">20</span>,<span class="string">'2016-03-03 00:00:00'</span>),(<span class="number">203</span>,<span class="string">'Susan'</span>,<span class="string">'Mavris'</span>,<span class="string">'SMAVRIS'</span>,<span class="string">'515.123.7777'</span>,<span class="string">'HR_REP'</span>,<span class="number">6500.00</span>,<span class="literal">NULL</span>,<span class="number">101</span>,<span class="number">40</span>,<span class="string">'2016-03-03 00:00:00'</span>),(<span class="number">204</span>,<span class="string">'Hermann'</span>,<span class="string">'Baer'</span>,<span class="string">'HBAER'</span>,<span class="string">'515.123.8888'</span>,<span class="string">'PR_REP'</span>,<span class="number">10000.00</span>,<span class="literal">NULL</span>,<span class="number">101</span>,<span class="number">70</span>,<span class="string">'2016-03-03 00:00:00'</span>),(<span class="number">205</span>,<span class="string">'Shelley'</span>,<span class="string">'Higgins'</span>,<span class="string">'SHIGGINS'</span>,<span class="string">'515.123.8080'</span>,<span class="string">'AC_MGR'</span>,<span class="number">12000.00</span>,<span class="literal">NULL</span>,<span class="number">101</span>,<span class="number">110</span>,<span class="string">'2016-03-03 00:00:00'</span>),(<span class="number">206</span>,<span class="string">'William'</span>,<span class="string">'Gietz'</span>,<span class="string">'WGIETZ'</span>,<span class="string">'515.123.8181'</span>,<span class="string">'AC_ACCOUNT'</span>,<span class="number">8300.00</span>,<span class="literal">NULL</span>,<span class="number">205</span>,<span class="number">110</span>,<span class="string">'2016-03-03 00:00:00'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `jobs` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`jobs`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`jobs`</span> (</span><br><span class="line">  <span class="string">`job_id`</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`job_title`</span> <span class="built_in">varchar</span>(<span class="number">35</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`min_salary`</span> <span class="built_in">int</span>(<span class="number">6</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`max_salary`</span> <span class="built_in">int</span>(<span class="number">6</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`job_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=gb2312;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `jobs` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`jobs`</span>(<span class="string">`job_id`</span>,<span class="string">`job_title`</span>,<span class="string">`min_salary`</span>,<span class="string">`max_salary`</span>) <span class="keyword">values</span> (<span class="string">'AC_ACCOUNT'</span>,<span class="string">'Public Accountant'</span>,<span class="number">4200</span>,<span class="number">9000</span>),(<span class="string">'AC_MGR'</span>,<span class="string">'Accounting Manager'</span>,<span class="number">8200</span>,<span class="number">16000</span>),(<span class="string">'AD_ASST'</span>,<span class="string">'Administration Assistant'</span>,<span class="number">3000</span>,<span class="number">6000</span>),(<span class="string">'AD_PRES'</span>,<span class="string">'President'</span>,<span class="number">20000</span>,<span class="number">40000</span>),(<span class="string">'AD_VP'</span>,<span class="string">'Administration Vice President'</span>,<span class="number">15000</span>,<span class="number">30000</span>),(<span class="string">'FI_ACCOUNT'</span>,<span class="string">'Accountant'</span>,<span class="number">4200</span>,<span class="number">9000</span>),(<span class="string">'FI_MGR'</span>,<span class="string">'Finance Manager'</span>,<span class="number">8200</span>,<span class="number">16000</span>),(<span class="string">'HR_REP'</span>,<span class="string">'Human Resources Representative'</span>,<span class="number">4000</span>,<span class="number">9000</span>),(<span class="string">'IT_PROG'</span>,<span class="string">'Programmer'</span>,<span class="number">4000</span>,<span class="number">10000</span>),(<span class="string">'MK_MAN'</span>,<span class="string">'Marketing Manager'</span>,<span class="number">9000</span>,<span class="number">15000</span>),(<span class="string">'MK_REP'</span>,<span class="string">'Marketing Representative'</span>,<span class="number">4000</span>,<span class="number">9000</span>),(<span class="string">'PR_REP'</span>,<span class="string">'Public Relations Representative'</span>,<span class="number">4500</span>,<span class="number">10500</span>),(<span class="string">'PU_CLERK'</span>,<span class="string">'Purchasing Clerk'</span>,<span class="number">2500</span>,<span class="number">5500</span>),(<span class="string">'PU_MAN'</span>,<span class="string">'Purchasing Manager'</span>,<span class="number">8000</span>,<span class="number">15000</span>),(<span class="string">'SA_MAN'</span>,<span class="string">'Sales Manager'</span>,<span class="number">10000</span>,<span class="number">20000</span>),(<span class="string">'SA_REP'</span>,<span class="string">'Sales Representative'</span>,<span class="number">6000</span>,<span class="number">12000</span>),(<span class="string">'SH_CLERK'</span>,<span class="string">'Shipping Clerk'</span>,<span class="number">2500</span>,<span class="number">5500</span>),(<span class="string">'ST_CLERK'</span>,<span class="string">'Stock Clerk'</span>,<span class="number">2000</span>,<span class="number">5000</span>),(<span class="string">'ST_MAN'</span>,<span class="string">'Stock Manager'</span>,<span class="number">5500</span>,<span class="number">8500</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `locations` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`locations`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`locations`</span> (</span><br><span class="line">  <span class="string">`location_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`street_address`</span> <span class="built_in">varchar</span>(<span class="number">40</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`postal_code`</span> <span class="built_in">varchar</span>(<span class="number">12</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`city`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`state_province`</span> <span class="built_in">varchar</span>(<span class="number">25</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`country_id`</span> <span class="built_in">varchar</span>(<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`location_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">3201</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=gb2312;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `locations` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`locations`</span>(<span class="string">`location_id`</span>,<span class="string">`street_address`</span>,<span class="string">`postal_code`</span>,<span class="string">`city`</span>,<span class="string">`state_province`</span>,<span class="string">`country_id`</span>) <span class="keyword">values</span> (<span class="number">1000</span>,<span class="string">'1297 Via Cola di Rie'</span>,<span class="string">'00989'</span>,<span class="string">'Roma'</span>,<span class="literal">NULL</span>,<span class="string">'IT'</span>),(<span class="number">1100</span>,<span class="string">'93091 Calle della Testa'</span>,<span class="string">'10934'</span>,<span class="string">'Venice'</span>,<span class="literal">NULL</span>,<span class="string">'IT'</span>),(<span class="number">1200</span>,<span class="string">'2017 Shinjuku-ku'</span>,<span class="string">'1689'</span>,<span class="string">'Tokyo'</span>,<span class="string">'Tokyo Prefecture'</span>,<span class="string">'JP'</span>),(<span class="number">1300</span>,<span class="string">'9450 Kamiya-cho'</span>,<span class="string">'6823'</span>,<span class="string">'Hiroshima'</span>,<span class="literal">NULL</span>,<span class="string">'JP'</span>),(<span class="number">1400</span>,<span class="string">'2014 Jabberwocky Rd'</span>,<span class="string">'26192'</span>,<span class="string">'Southlake'</span>,<span class="string">'Texas'</span>,<span class="string">'US'</span>),(<span class="number">1500</span>,<span class="string">'2011 Interiors Blvd'</span>,<span class="string">'99236'</span>,<span class="string">'South San Francisco'</span>,<span class="string">'California'</span>,<span class="string">'US'</span>),(<span class="number">1600</span>,<span class="string">'2007 Zagora St'</span>,<span class="string">'50090'</span>,<span class="string">'South Brunswick'</span>,<span class="string">'New Jersey'</span>,<span class="string">'US'</span>),(<span class="number">1700</span>,<span class="string">'2004 Charade Rd'</span>,<span class="string">'98199'</span>,<span class="string">'Seattle'</span>,<span class="string">'Washington'</span>,<span class="string">'US'</span>),(<span class="number">1800</span>,<span class="string">'147 Spadina Ave'</span>,<span class="string">'M5V 2L7'</span>,<span class="string">'Toronto'</span>,<span class="string">'Ontario'</span>,<span class="string">'CA'</span>),(<span class="number">1900</span>,<span class="string">'6092 Boxwood St'</span>,<span class="string">'YSW 9T2'</span>,<span class="string">'Whitehorse'</span>,<span class="string">'Yukon'</span>,<span class="string">'CA'</span>),(<span class="number">2000</span>,<span class="string">'40-5-12 Laogianggen'</span>,<span class="string">'190518'</span>,<span class="string">'Beijing'</span>,<span class="literal">NULL</span>,<span class="string">'CN'</span>),(<span class="number">2100</span>,<span class="string">'1298 Vileparle (E)'</span>,<span class="string">'490231'</span>,<span class="string">'Bombay'</span>,<span class="string">'Maharashtra'</span>,<span class="string">'IN'</span>),(<span class="number">2200</span>,<span class="string">'12-98 Victoria Street'</span>,<span class="string">'2901'</span>,<span class="string">'Sydney'</span>,<span class="string">'New South Wales'</span>,<span class="string">'AU'</span>),(<span class="number">2300</span>,<span class="string">'198 Clementi North'</span>,<span class="string">'540198'</span>,<span class="string">'Singapore'</span>,<span class="literal">NULL</span>,<span class="string">'SG'</span>),(<span class="number">2400</span>,<span class="string">'8204 Arthur St'</span>,<span class="literal">NULL</span>,<span class="string">'London'</span>,<span class="literal">NULL</span>,<span class="string">'UK'</span>),(<span class="number">2500</span>,<span class="string">'Magdalen Centre, The Oxford Science Park'</span>,<span class="string">'OX9 9ZB'</span>,<span class="string">'Oxford'</span>,<span class="string">'Oxford'</span>,<span class="string">'UK'</span>),(<span class="number">2600</span>,<span class="string">'9702 Chester Road'</span>,<span class="string">'09629850293'</span>,<span class="string">'Stretford'</span>,<span class="string">'Manchester'</span>,<span class="string">'UK'</span>),(<span class="number">2700</span>,<span class="string">'Schwanthalerstr. 7031'</span>,<span class="string">'80925'</span>,<span class="string">'Munich'</span>,<span class="string">'Bavaria'</span>,<span class="string">'DE'</span>),(<span class="number">2800</span>,<span class="string">'Rua Frei Caneca 1360 '</span>,<span class="string">'01307-002'</span>,<span class="string">'Sao Paulo'</span>,<span class="string">'Sao Paulo'</span>,<span class="string">'BR'</span>),(<span class="number">2900</span>,<span class="string">'20 Rue des Corps-Saints'</span>,<span class="string">'1730'</span>,<span class="string">'Geneva'</span>,<span class="string">'Geneve'</span>,<span class="string">'CH'</span>),(<span class="number">3000</span>,<span class="string">'Murtenstrasse 921'</span>,<span class="string">'3095'</span>,<span class="string">'Bern'</span>,<span class="string">'BE'</span>,<span class="string">'CH'</span>),(<span class="number">3100</span>,<span class="string">'Pieter Breughelstraat 837'</span>,<span class="string">'3029SK'</span>,<span class="string">'Utrecht'</span>,<span class="string">'Utrecht'</span>,<span class="string">'NL'</span>),(<span class="number">3200</span>,<span class="string">'Mariano Escobedo 9991'</span>,<span class="string">'11932'</span>,<span class="string">'Mexico City'</span>,<span class="string">'Distrito Federal,'</span>,<span class="string">'MX'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40101 SET SQL_MODE=@OLD_SQL_MODE */</span>;</span><br><span class="line"><span class="comment">/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */</span>;</span><br><span class="line"><span class="comment">/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */</span>;</span><br><span class="line"><span class="comment">/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */</span>;</span><br></pre></td></tr></table></figure>

<p><strong>employees表的信息如下</strong>：</p>
<table>
<thead>
<tr>
<th align="center">列名</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">employee_id</td>
<td align="center">员工编号</td>
</tr>
<tr>
<td align="center">first_name</td>
<td align="center">名</td>
</tr>
<tr>
<td align="center">last_name</td>
<td align="center">姓</td>
</tr>
<tr>
<td align="center">email</td>
<td align="center">邮箱</td>
</tr>
<tr>
<td align="center">phone_number</td>
<td align="center">手机号码</td>
</tr>
<tr>
<td align="center">job_id</td>
<td align="center">工种编号</td>
</tr>
<tr>
<td align="center">salary</td>
<td align="center">工资</td>
</tr>
<tr>
<td align="center">commission_pct</td>
<td align="center">奖金率</td>
</tr>
<tr>
<td align="center">manager_id</td>
<td align="center">上级领导的编号</td>
</tr>
<tr>
<td align="center">department_id</td>
<td align="center">部门编号</td>
</tr>
<tr>
<td align="center">hiredate</td>
<td align="center">入职日期</td>
</tr>
</tbody></table>
<p><strong>departments表信息如下</strong>：</p>
<table>
<thead>
<tr>
<th align="center">列名</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">department_id</td>
<td align="center">部门编号</td>
</tr>
<tr>
<td align="center">department_name</td>
<td align="center">部门名称</td>
</tr>
<tr>
<td align="center">manager_id</td>
<td align="center">部门主管编号</td>
</tr>
<tr>
<td align="center">location_id</td>
<td align="center">位置编号</td>
</tr>
</tbody></table>
<p><strong>jobs表信息如下</strong>：</p>
<table>
<thead>
<tr>
<th align="center">列名</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">job_id</td>
<td align="center">工种编号</td>
</tr>
<tr>
<td align="center">job_title</td>
<td align="center">工种名称</td>
</tr>
<tr>
<td align="center">min_salary</td>
<td align="center">最低工资</td>
</tr>
<tr>
<td align="center">max_salary</td>
<td align="center">最高工资</td>
</tr>
</tbody></table>
<p><strong>locations表信息如下</strong>：</p>
<table>
<thead>
<tr>
<th align="center">列名</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">location_id</td>
<td align="center">位置编号</td>
</tr>
<tr>
<td align="center">street_address</td>
<td align="center">街道</td>
</tr>
<tr>
<td align="center">postal_code</td>
<td align="center">邮编</td>
</tr>
<tr>
<td align="center">city</td>
<td align="center">城市</td>
</tr>
<tr>
<td align="center">state_province</td>
<td align="center">州/省</td>
</tr>
<tr>
<td align="center">country_id</td>
<td align="center">国家编号</td>
</tr>
</tbody></table>
<h3 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h3><p><strong>语法</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 查询列表 </span><br><span class="line"><span class="keyword">FROM</span> 表名;</span><br></pre></td></tr></table></figure>

<ol>
<li>查询列表可以是表中的字段、常量值、表达式、函数</li>
<li>查询结果是一个虚拟的表格</li>
</ol>
<p><strong>使用示例</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#基础查询</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">语法：</span></span><br><span class="line"><span class="comment">SELECT 查询列表 </span></span><br><span class="line"><span class="comment">FROM 表名;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">USE</span> myemployees ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.查询表中的单个字段</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.查询表中的多个字段</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name, salary, email <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.查询表中的所有字段</span></span><br><span class="line"><span class="comment">#方式一：</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="string">`employee_id`</span>,</span><br><span class="line">  <span class="string">`first_name`</span>,</span><br><span class="line">  <span class="string">`last_name`</span>,</span><br><span class="line">  <span class="string">`email`</span>,</span><br><span class="line">  <span class="string">`phone_number`</span>,</span><br><span class="line">  <span class="string">`job_id`</span>,</span><br><span class="line">  <span class="string">`salary`</span>,</span><br><span class="line">  <span class="string">`commission_pct`</span>,</span><br><span class="line">  <span class="string">`manager_id`</span>,</span><br><span class="line">  <span class="string">`department_id`</span>,</span><br><span class="line">  <span class="string">`hiredate`</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees ;</span><br><span class="line">  </span><br><span class="line"><span class="comment">#方式二：</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.查询常量值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.查询表达式</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span>+<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.查询函数</span></span><br><span class="line"><span class="comment">#version()表示MySQL的版本</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">VERSION</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.起别名</span></span><br><span class="line"><span class="comment">#方式一:</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span>+<span class="number">2</span> <span class="keyword">AS</span> 和;</span><br><span class="line"><span class="keyword">SELECT</span> last_name <span class="keyword">AS</span> 姓, first_name <span class="keyword">AS</span> 名 <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">#方式二:</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name 姓, first_name <span class="keyword">AS</span> 名 <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">#8.去重</span></span><br><span class="line"><span class="comment">#使用distinct关键字来去重</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span>;</span><br></pre></td></tr></table></figure>

<h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><p>1、下面的语句是否可以执行成功</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> last_name, job_id, salary <span class="keyword">as</span> sal <span class="keyword">from</span> employees;</span><br></pre></td></tr></table></figure>

<p>2、下面的语句是否可以执行成功</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> employees;</span><br></pre></td></tr></table></figure>

<p>3、找出下面语句中的错误</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> employee_id, last_name， salary * <span class="number">12</span> “ANNUAL SALARY” <span class="keyword">from</span> employees;</span><br></pre></td></tr></table></figure>

<p>4、显示表departments的结构，并查询其中的全部数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DESC departments;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> departments;</span><br></pre></td></tr></table></figure>

<p>5、显示表employees中的全部job_id（不能重复）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> job_id <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure>

<p>6、显示出表employees的全部列，各个列之间使用逗号连接，列头显示成OUT_PUT</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#这里给出了如何处理null值</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">IFNULL</span>(commission_pct, <span class="number">0</span>) <span class="keyword">AS</span> 奖金率,</span><br><span class="line">  commission_pct </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure>

<p>连接使用concat函数</p>
<h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><p><strong>语法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">	查询列表</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">	表名</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">	筛选条件;</span><br></pre></td></tr></table></figure>

<p><strong>执行顺序</strong>：</p>
<ol>
<li>先执行from，从数据库中查看该表是否存在</li>
<li>执行where，查询符合条件的记录</li>
<li>执行select，选出指定的列显示结果</li>
</ol>
<p><strong>筛选条件的种类</strong></p>
<p>1、条件表达式</p>
<p>条件运算符：<code>&gt;</code>、<code>&lt;</code>、<code>=</code>、<code>!=</code>、<code>&lt;&gt;</code></p>
<p>2、逻辑表达式</p>
<p>逻辑运算符：<code>&amp;&amp;</code>、<code>||</code>、<code>!</code>、<code>AND</code>、<code>OR</code>、<code>NOT</code></p>
<p>3、模糊查询：<code>like</code>、<code>between and</code>、<code>in</code>、<code>is null</code></p>
<p><strong>按条件表达式筛选</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询员工工资大于10000的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> salary &gt; <span class="number">10000</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询部门编号不等于90的员工名和部门编号</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  department_id </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> department_id &lt;&gt; <span class="number">90</span> ;</span><br></pre></td></tr></table></figure>

<p><strong>按逻辑表达式筛选</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#按逻辑表达式筛选</span></span><br><span class="line"><span class="comment">#查询工资在10000到20000之间的员工名、工资及奖金</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  salary,</span><br><span class="line">  commission_pct </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> salary &gt;= <span class="number">10000</span> </span><br><span class="line">  <span class="keyword">AND</span> salary &lt;= <span class="number">20000</span> ;</span><br><span class="line">  </span><br><span class="line"><span class="comment">#查询部门编号不是90到110之间，或工资高于15000的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> department_id &lt; <span class="number">90</span> </span><br><span class="line">  <span class="keyword">OR</span> department_id &gt; <span class="number">110</span> </span><br><span class="line">  <span class="keyword">OR</span> salary &gt; <span class="number">15000</span> ;</span><br></pre></td></tr></table></figure>

<p><strong>模糊查询</strong></p>
<p>通配符：</p>
<ul>
<li><code>%</code>：表示任意多个字符，包含0个字符</li>
<li><code>_</code>：表示单个字符</li>
</ul>
<p>转义字符可以使用<code>\</code>，也可以使用<code>ESCAPE</code>关键字来指定转义字符</p>
<p><code>LIKE</code>的使用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#LIKE的使用</span></span><br><span class="line"><span class="comment">#查询员工名中包含字符a的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%a%'</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询员工第三个字符为a的第五个字符为e的员工名和工资</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  salary </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'__a_e%'</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询第二个字符为下划线的员工名</span></span><br><span class="line"><span class="comment">#方式一</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'_\_%'</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#方式二</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'_$_%'</span> ESCAPE <span class="string">'$'</span> ;</span><br></pre></td></tr></table></figure>

<p><code>BETWEEN AND</code>的使用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#BETWEEN AND</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">between x and y相当于[x, y]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">#查询员工编号在100到120之间的所有的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> employee_id <span class="keyword">BETWEEN</span> <span class="number">100</span> </span><br><span class="line">  <span class="keyword">AND</span> <span class="number">200</span> ;</span><br></pre></td></tr></table></figure>

<p><code>IN</code>关键字的使用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#IN</span></span><br><span class="line"><span class="comment">#查询员工的工种编号是AD_VP、AD_PRES、IT_PROG中的一个的员工名和工种编号</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  job_id </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> job_id <span class="keyword">IN</span> (<span class="string">'AD_VP'</span>, <span class="string">'AD_PRES'</span>, <span class="string">'IT_PROG'</span>) ;</span><br></pre></td></tr></table></figure>

<p><code>IS NULL</code>的使用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#IS NULL</span></span><br><span class="line"><span class="comment">#查询没有奖金的员工名和奖金率</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  commission_pct </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="literal">NULL</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询有奖金的员工和奖金率</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  commission_pct </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ;</span><br></pre></td></tr></table></figure>

<p><strong>安全等于</strong>：<code>&lt;=&gt;</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询工资为12000的员工信息</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> employees <span class="keyword">where</span> salary &lt;=&gt; <span class="number">12000</span>;</span><br></pre></td></tr></table></figure>

<p><code>is null</code>：只能判断null值</p>
<p><code>&lt;=&gt;</code>：既可以判断null值，也能判断是否等于，但是可读性较差，不建议使用！</p>
<h4 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h4><p>1、查询员工号为176的员工的员工名、部门号以及年薪</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  department_id,</span><br><span class="line">  salary * <span class="number">12</span> * (<span class="number">1</span> + <span class="keyword">IFNULL</span>(commission_pct, <span class="number">0</span>)) 年薪 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> employee_id = <span class="number">176</span> ;</span><br></pre></td></tr></table></figure>

<p>2、查询没有奖金，且工资小于18000的员工的工资和员工名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  salary </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="literal">NULL</span> </span><br><span class="line">  <span class="keyword">AND</span> salary &lt; <span class="number">18000</span> ;</span><br></pre></td></tr></table></figure>

<p>3、查询job_id不为<code>IT</code>或者工资为12000的员工信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> job_id &lt;&gt; <span class="string">'IT'</span> </span><br><span class="line">  <span class="keyword">OR</span> salary = <span class="number">12000</span> ;</span><br></pre></td></tr></table></figure>

<p>4、查询departments表中涉及到了哪些位置编号</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> </span><br><span class="line">  location_id </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  departments ;</span><br></pre></td></tr></table></figure>

<h4 id="经典面试题"><a href="#经典面试题" class="headerlink" title="经典面试题"></a>经典面试题</h4><p><strong>问题</strong>：<code>select * from employees;</code>和<code>select * from employees where commisson_pct like ‘%%’ and last_name like ‘%%’;</code>结果是否一样，说明原因</p>
<p>答：结果不一样，前者包含了null的记录，而后者不包含。</p>
<h3 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h3><p><strong>语法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  查询列表 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  表名 </span><br><span class="line"><span class="keyword">WHERE</span> 筛选条件 </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 排序列表 【<span class="keyword">ASC</span> | <span class="keyword">DESC</span>】 ;</span><br></pre></td></tr></table></figure>

<p><strong>注意事项</strong></p>
<ol>
<li><code>ASC</code>代表升序，是默认值，<code>DESC</code>代表降序</li>
<li><code>ORDER BY</code>可以支持单个字段、多个字段、表达式、函数、别名</li>
<li><code>ORDER BY</code>一般放在查询语句的最后，除了<code>LIMIT</code>子句</li>
</ol>
<p><strong>使用示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#排序查询</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按照工资升序/降序查询员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询部门编号大于等于90的员工信息，按照入职时间先后进行排序</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> department_id &gt;= <span class="number">90</span> </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> hiredate <span class="keyword">ASC</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照表达式排序：按照年薪的高低显示员工的信息（降序）</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  *,</span><br><span class="line">  salary * <span class="number">12</span> * (<span class="number">1</span> + <span class="keyword">IFNULL</span>(commission_pct, <span class="number">0</span>)) 年薪 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 年薪 <span class="keyword">DESC</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#按函数排序：按照姓名的长度显示员工的姓名和工资（升序）</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  salary,</span><br><span class="line">  <span class="keyword">LENGTH</span>(last_name) 姓名长度 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 姓名长度 ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#多个字段排序：查询员工信息，先按照工资排序（升序），再按员工编号排序降序</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">ASC</span>,</span><br><span class="line">  employee_id <span class="keyword">DESC</span> ;</span><br></pre></td></tr></table></figure>

<h4 id="练习-2"><a href="#练习-2" class="headerlink" title="练习"></a>练习</h4><p>1、查询员工的姓名和部门编号和年薪，按年薪降序，按姓名升序</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  department_id,</span><br><span class="line">  salary * <span class="number">12</span> * (<span class="number">1</span> + <span class="keyword">IFNULL</span>(commission_pct, <span class="number">0</span>)) 年薪 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>,</span><br><span class="line">  last_name <span class="keyword">ASC</span> ;</span><br></pre></td></tr></table></figure>

<p>2、选择工资不在8000到17000的员工的姓名和工资，按工资降序</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  salary </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> salary &lt; <span class="number">8000</span> </span><br><span class="line">  <span class="keyword">OR</span> salary &gt; <span class="number">17000</span> </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span> ;</span><br></pre></td></tr></table></figure>

<p>3、查询邮箱中包含e的员工信息，并按照邮箱的字节数降序，再按部门编号升序</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  *,</span><br><span class="line">  <span class="keyword">LENGTH</span>(email) </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> email <span class="keyword">LIKE</span> <span class="string">'%e%'</span> </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">LENGTH</span>(email) <span class="keyword">DESC</span>,</span><br><span class="line">  department_id <span class="keyword">ASC</span> ;</span><br></pre></td></tr></table></figure>



<h3 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h3><p><strong>分类</strong></p>
<ul>
<li>单行函数：例如，<code>length()</code>、<code>ifnull()</code>、<code>concat()</code>等</li>
<li>多行函数：又称聚合函数、组函数、统计函数</li>
</ul>
<h4 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h4><p>字符相关的函数：</p>
<ul>
<li><p><code>length()</code>：获取参数值的字节个数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LENGTH</span>(<span class="string">'张三lala'</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>concat()</code>：拼接字符串</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">CONCAT</span>(last_name, <span class="string">'_'</span>, first_name) 姓名 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>upper()</code>、<code>lower()</code>：大写和小写</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">UPPER</span>(<span class="string">'hello'</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LOWER</span>(<span class="string">'HELLO'</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>substr()</code>、<code>substring()</code>：截取子串</p>
<p>注意：SQL中的索引是从1开始的，<code>[startIndex, endIndex]</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUBSTR</span>(<span class="string">'hello'</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUBSTRING</span>(<span class="string">'hello'</span>, <span class="number">1</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure>

<p>案例：姓名中的首字符大写，其它字符小写，然后用_拼接，显示出来</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">CONCAT</span>(</span><br><span class="line">    <span class="keyword">UPPER</span>(<span class="keyword">SUBSTR</span>(last_name, <span class="number">1</span>, <span class="number">1</span>)),</span><br><span class="line">    <span class="string">'_'</span>,</span><br><span class="line">    <span class="keyword">SUBSTR</span>(last_name, <span class="number">2</span>)</span><br><span class="line">  ) 员工名 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>instr()</code>：返回子串第一次出现的索引，找不到则返回0</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">INSTR</span>(<span class="string">'hello'</span>, <span class="string">'el'</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>trim()</code>：去除字符串前后的空格</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">TRIM</span>(<span class="string">'  hello  '</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>lpad()</code>：用指定的字符实现左填充指定长度</p>
</li>
<li><p><code>rpad()</code>：用指定的字符实现右填充指定长度</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">LPAD</span>(<span class="string">'张三'</span>, <span class="number">10</span>, <span class="string">'*'</span>) 左填充,</span><br><span class="line">  RPAD(<span class="string">'张三'</span>, <span class="number">10</span>, <span class="string">'*'</span>) 右填充 ;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>replace()</code>：替换所有</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">REPLACE</span>(<span class="string">'hello'</span>, <span class="string">'e'</span>, <span class="string">'a'</span>) ;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h4 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h4><ul>
<li><p><code>round()</code>：四舍五入</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">ROUND</span>(<span class="number">1.28</span>);<span class="comment">#1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">ROUND</span>(<span class="number">-1.28</span>);<span class="comment">#-1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">ROUND</span>(<span class="number">3.145</span>, <span class="number">2</span>);<span class="comment">#3.15</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>ceil()</code>：向上取整</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CEIL</span>(<span class="number">1.001</span>);<span class="comment">#2</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>float()</code>：向下取整</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">FLOOR</span>(<span class="number">1.999</span>);<span class="comment">#1</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>truncate()</code>：截断</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">TRUNCATE</span>(<span class="number">3.1415926</span>, <span class="number">2</span>);<span class="comment">#3.14</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>mod()</code>：取余</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MOD</span>(<span class="number">10</span>, <span class="number">3</span>);<span class="comment">#1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MOD</span>(<span class="number">10</span>, <span class="number">-3</span>);<span class="comment">#1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MOD</span>(<span class="number">-10</span>, <span class="number">3</span>);<span class="comment">#-1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MOD</span>(<span class="number">-10</span>, <span class="number">-3</span>);<span class="comment">#-1</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h4><table>
<thead>
<tr>
<th align="center">格式符</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>%Y</code></td>
<td align="center">四位的年份</td>
</tr>
<tr>
<td align="center"><code>%y</code></td>
<td align="center">两位的年份</td>
</tr>
<tr>
<td align="center"><code>%m</code></td>
<td align="center">月份（01，02，…，12）</td>
</tr>
<tr>
<td align="center"><code>%c</code></td>
<td align="center">月份（1，2，…，12）</td>
</tr>
<tr>
<td align="center"><code>%d</code></td>
<td align="center">日（01，02，…）</td>
</tr>
<tr>
<td align="center"><code>%H</code></td>
<td align="center">小时（24小时制）</td>
</tr>
<tr>
<td align="center"><code>%h</code></td>
<td align="center">小时（12小时制）</td>
</tr>
<tr>
<td align="center"><code>%i</code></td>
<td align="center">分钟（00，…，59）</td>
</tr>
<tr>
<td align="center"><code>%s</code></td>
<td align="center">秒（00，…，59）</td>
</tr>
</tbody></table>
<ul>
<li><p><code>now()</code>：返回当前系统日期时间，格式为<code>YYYY-MM-dd HH:mm:ss</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NOW</span>();</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>curdate()</code>：返回当前日期，不包含时间</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURDATE</span>();</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>curtime()</code>：返回当前时间，不包含日期</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURTIME</span>();</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>year()</code>、<code>month()</code>、<code>monthname()</code>、<code>day()</code>、<code>hour()</code>等</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">YEAR</span>(<span class="keyword">NOW</span>()) 年,</span><br><span class="line">  <span class="keyword">MONTH</span>(<span class="keyword">NOW</span>()) 月,</span><br><span class="line">  MONTHNAME(<span class="keyword">NOW</span>()) 月份名称<span class="comment">#英文,</span></span><br><span class="line">  <span class="keyword">DAY</span>(<span class="keyword">NOW</span>()) 日,</span><br><span class="line">  <span class="keyword">HOUR</span>(<span class="keyword">CURTIME</span>()) 时,</span><br><span class="line">  <span class="keyword">MINUTE</span>(<span class="keyword">CURTIME</span>()) 分,</span><br><span class="line">  <span class="keyword">SECOND</span>(<span class="keyword">CURTIME</span>()) 秒,</span><br><span class="line">  <span class="keyword">WEEKDAY</span>(<span class="keyword">NOW</span>()) 星期<span class="comment">#0表示周一，6表示周日 ;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>str_to_date()</code>：将日期格式的字符串转换为指定格式的日期</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">STR_TO_DATE</span>(<span class="string">'2020-01-01 08-00-00'</span>, <span class="string">'%Y-%c-%d %H-%i-%s'</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>date_format()</code>：将日期转换为指定格式的字符串</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATE_FORMAT</span>(<span class="keyword">NOW</span>(), <span class="string">'%Y-%c-%d %H-%i-%s'</span>);</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="其它函数【补充】"><a href="#其它函数【补充】" class="headerlink" title="其它函数【补充】"></a>其它函数【补充】</h4><ul>
<li><p><code>version()</code>：当前数据库的版本</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">VERSION</span>();</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>database()</code>：当前正在使用的数据库</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATABASE</span>();</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>user()</code>：当前用户</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span>();</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="流程控制函数【补充】"><a href="#流程控制函数【补充】" class="headerlink" title="流程控制函数【补充】"></a>流程控制函数【补充】</h4><ul>
<li><p><code>if()</code>：if else的效果</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IF</span>(<span class="number">10</span> &gt; <span class="number">5</span>, <span class="string">'大'</span>, <span class="string">'小'</span>) <span class="keyword">AS</span> <span class="keyword">output</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>case()</code></p>
<ul>
<li><p>用法一：类似于<strong>switch case</strong></p>
<p><strong>格式</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">case 要判断的字段或表达式</span><br><span class="line">when 常量1 then 要显示的值或 语句1;</span><br><span class="line">when 常量2 then 要显示的值或 语句2;</span><br><span class="line">...</span><br><span class="line">else 常量n then 要显示的值或 语句n;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">案例：查询员工的工资，要求</span></span><br><span class="line"><span class="comment">部门号=30，显示工资为原来的1.1倍</span></span><br><span class="line"><span class="comment">部门号=40，显示工资为原来的1.2倍</span></span><br><span class="line"><span class="comment">部门号=50，显示工资为原来的1.3倍</span></span><br><span class="line"><span class="comment">其它部门，显示原工资</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">CASE</span></span><br><span class="line">    (salary) </span><br><span class="line">    <span class="keyword">WHEN</span> department_id = <span class="number">30</span> </span><br><span class="line">    <span class="keyword">THEN</span> salary * <span class="number">1.1</span> </span><br><span class="line">    <span class="keyword">WHEN</span> department_id = <span class="number">40</span> </span><br><span class="line">    <span class="keyword">THEN</span> salary * <span class="number">1.2</span> </span><br><span class="line">    <span class="keyword">WHEN</span> department_id = <span class="number">50</span> </span><br><span class="line">    <span class="keyword">THEN</span> salary * <span class="number">1.3</span> </span><br><span class="line">    <span class="keyword">ELSE</span> salary </span><br><span class="line">  <span class="keyword">END</span> <span class="keyword">AS</span> 新工资 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure>
</li>
<li><p>用法二：<strong>多重if</strong></p>
<p><strong>格式</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">case</span><br><span class="line">when 条件1 then 要显示的值1或 语句1;</span><br><span class="line">when 条件2 then 要显示的值2或 语句2;</span><br><span class="line">...</span><br><span class="line">else 要显示的值n或 语句n;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">查询员工的工资情况</span></span><br><span class="line"><span class="comment">工资&gt;20000，显示A</span></span><br><span class="line"><span class="comment">工资&gt;15000, 显示B</span></span><br><span class="line"><span class="comment">工资&gt;10000, 显示C</span></span><br><span class="line"><span class="comment">其它显示D</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  salary, </span><br><span class="line">  <span class="keyword">CASE</span></span><br><span class="line">    <span class="keyword">WHEN</span> salary &gt; <span class="number">20000</span> </span><br><span class="line">    <span class="keyword">THEN</span> <span class="string">'A'</span> </span><br><span class="line">    <span class="keyword">WHEN</span> salary &gt; <span class="number">15000</span> </span><br><span class="line">    <span class="keyword">THEN</span> <span class="string">'B'</span> </span><br><span class="line">    <span class="keyword">WHEN</span> salary &gt; <span class="number">10000</span> </span><br><span class="line">    <span class="keyword">THEN</span> <span class="string">'C'</span> </span><br><span class="line">    <span class="keyword">ELSE</span> <span class="string">'D'</span> </span><br><span class="line">  <span class="keyword">END</span> <span class="keyword">AS</span> 工资级别 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
<h4 id="常见函数总结"><a href="#常见函数总结" class="headerlink" title="常见函数总结"></a>常见函数总结</h4><p>字符函数：length、concat、substr/substring、instr、trim、upper、lower、lpad、rpad、replace</p>
<p>数学函数：round、ceil、floor、truncate、mod</p>
<p>日期函数：now、curdate、curtime、year、month、monthname、day、hour、minute、second、weekday、str_to_date、date_format</p>
<p>其它函数：version、database、user</p>
<p>控制函数：if、case</p>
<h4 id="练习-3"><a href="#练习-3" class="headerlink" title="练习"></a>练习</h4><p>1、显示系统时间日期</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NOW</span>() <span class="keyword">AS</span> 系统时间日期;</span><br></pre></td></tr></table></figure>

<p>2、查询员工号、姓名、工资以及工资提高百分之二十之后的结果（new salary）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  employee_id,</span><br><span class="line">  last_name,</span><br><span class="line">  salary,</span><br><span class="line">  salary * <span class="number">1.2</span> <span class="string">'new salary'</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure>

<p>3、将员工的姓名按照首字母排序，并写出姓名的长度</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  <span class="keyword">LENGTH</span>(last_name) 姓名长度 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">SUBSTR</span>(last_name, <span class="number">1</span>, <span class="number">1</span>) ;</span><br></pre></td></tr></table></figure>

<p>4、编写一个查询，产生下面的结果</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;last_name&gt; earns &lt;salary&gt; monthly but wants &lt;salary*3&gt; Dream Salary</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">CONCAT</span>(</span><br><span class="line">    last_name,</span><br><span class="line">    <span class="string">' earns '</span>,</span><br><span class="line">    salary,</span><br><span class="line">    <span class="string">' monthly but wants '</span>,</span><br><span class="line">    salary * <span class="number">3</span>,</span><br><span class="line">    <span class="string">' Dream Salary'</span></span><br><span class="line">  ) </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure>

<p>5、使用case函数，按照下面条件编写SQL语句</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">job				grade</span><br><span class="line">AD_PRES			A</span><br><span class="line">ST_MAN			B</span><br><span class="line">IT_PROG			C</span><br><span class="line">others			D</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  job_id,</span><br><span class="line">  <span class="keyword">CASE</span></span><br><span class="line">    (job_id) </span><br><span class="line">    <span class="keyword">WHEN</span> job_id = <span class="string">'AD_PRES'</span> </span><br><span class="line">    <span class="keyword">THEN</span> <span class="string">'A'</span> </span><br><span class="line">    <span class="keyword">WHEN</span> job_id = <span class="string">'ST_MAN'</span> </span><br><span class="line">    <span class="keyword">THEN</span> <span class="string">'B'</span> </span><br><span class="line">    <span class="keyword">WHEN</span> job_id = <span class="string">'IT_PROG'</span> </span><br><span class="line">    <span class="keyword">THEN</span> <span class="string">'C'</span> </span><br><span class="line">    <span class="keyword">ELSE</span> <span class="string">'D'</span> </span><br><span class="line">  <span class="keyword">END</span> <span class="keyword">AS</span> grade </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure>



<h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><p><strong>分组函数（多行/聚合/组函数）</strong></p>
<ul>
<li><code>sum</code>：求和</li>
<li><code>avg</code>：平均值</li>
<li><code>min</code>：最小值</li>
<li><code>max</code>：最大值</li>
<li><code>count</code>：统计非空个数</li>
</ul>
<p>注意事项：</p>
<ol>
<li><p>sum和avg一般只用于处理数值类型，而max、min、count则可以处理任何类型</p>
</li>
<li><p>sum、avg、max、min、count都忽略null值</p>
</li>
<li><p>可以和distinct搭配使用，起到去重的作用</p>
</li>
<li><p>count函数详细介绍</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#count详细介绍</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">#count只要一行记录不全是null就可以计数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">#count(1)相当于在表中加了一列1然后进行统计</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">MYISAM存储引擎下，count(*)的效率最高</span></span><br><span class="line"><span class="comment">INNODB存储引擎下，count(*)和count(1)的效率差不多，比count(字段)的效率高</span></span><br><span class="line"><span class="comment">综上所属，一般使用count(*)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>和分组函数一起查询的字段要求是<code>group by</code>后面的字段</p>
</li>
</ol>
<p><strong>小练习</strong></p>
<p>1、查询公司员工工资的最大值、最小值、平均值，总和</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">MAX</span>(salary),</span><br><span class="line">  <span class="keyword">MIN</span>(salary),</span><br><span class="line">  <span class="keyword">AVG</span>(salary),</span><br><span class="line">  <span class="keyword">SUM</span>(salary) </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure>

<p>2、查询员工表中最大入职日期和最小入职日期相差的天数</p>
<p>这里需要用到<code>datediff</code>函数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">DATEDIFF</span>(<span class="keyword">MAX</span>(hiredate), <span class="keyword">MIN</span>(hiredate)) </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure>

<p>3、查询部门编号为90的员工个数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">COUNT</span>(*) </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> department_id = <span class="number">90</span> ;</span><br></pre></td></tr></table></figure>

<h4 id="group-by子句"><a href="#group-by子句" class="headerlink" title="group by子句"></a>group by子句</h4><p><strong>语法</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  查询列表（一般包含分组函数） </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  表名 </span><br><span class="line"><span class="keyword">WHERE</span> 筛选条件 </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> 分组表达式 </span><br><span class="line"><span class="keyword">HAVING</span> 分组后的筛选条件 </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 字段值 ;</span><br></pre></td></tr></table></figure>

<p>group by出现在where子句后</p>
<p><strong>使用示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询每个工种的最高工资（简单的分组查询）</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">MAX</span>(salary) 最高工资 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询每个位置上的部门个数</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">COUNT</span>(*),</span><br><span class="line">  location_id </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  departments </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> location_id ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询邮箱中包含a字符的每个部门的平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">AVG</span>(salary) 平均工资,</span><br><span class="line">  department_id </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> email <span class="keyword">LIKE</span> <span class="string">'%a%'</span> </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询有奖金的每个领导手下员工的最高工资</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">MAX</span>(salary) 最高工资,</span><br><span class="line">  manager_id </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> manager_id ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询哪个部门的员工个数大于2</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  department_id,</span><br><span class="line">  <span class="keyword">COUNT</span>(*) 员工个数 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id </span><br><span class="line"><span class="keyword">HAVING</span> 员工个数 &gt; <span class="number">2</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询每个工种有奖金的员工的最高工资大于12000的工种编号和最高工资</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  job_id,</span><br><span class="line">  <span class="keyword">MAX</span>(salary) 最高工资 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id </span><br><span class="line"><span class="keyword">HAVING</span> 最高工资 &gt; <span class="number">12000</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询领导编号大于102的每个领导手下的最低工资&gt;5000的领导编号是哪个以及对应工资</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  manager_id,</span><br><span class="line">  salary,</span><br><span class="line">  <span class="keyword">MIN</span>(salary) 最低工资 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> manager_id &gt; <span class="number">102</span> </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> manager_id </span><br><span class="line"><span class="keyword">HAVING</span> 最低工资 &gt; <span class="number">5000</span> ;</span><br></pre></td></tr></table></figure>

<p>查询的筛选条件分为两种：</p>
<ul>
<li>分组前筛选条件，也就是where子句，放在group by之前</li>
<li>分组后筛选条件，也就是having子句，放在group by之后</li>
</ul>
<p>分组函数作为条件一定要放在having子句后，能用分组前筛选则有限考虑使用分组前筛选</p>
<p>tips：</p>
<ul>
<li>group by子句支持单个字段、多个字段（不分顺序）、表达式或者函数（使用得较少）</li>
<li>也可以添加排序，使用order by子句，放在查询语句的最后</li>
</ul>
<h4 id="练习-4"><a href="#练习-4" class="headerlink" title="练习"></a>练习</h4><p>1、查询各job_id的员工工资的最大值、最小值、平均值、总和，并按照job_id升序</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  job_id,</span><br><span class="line">  <span class="keyword">MAX</span>(salary) 最大工资,</span><br><span class="line">  <span class="keyword">MIN</span>(salary) 最小工资,</span><br><span class="line">  <span class="keyword">AVG</span>(salary) 平均工资,</span><br><span class="line">  <span class="keyword">SUM</span>(salary) 工资总和 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> job_id ;</span><br></pre></td></tr></table></figure>

<p>2、查询员工最高工资和最低工资的差距</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">MAX</span>(salary) - <span class="keyword">MIN</span>(salary) 差距 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees ;</span><br></pre></td></tr></table></figure>

<p>3、查询各个管理者手下员工的最低工资，其中最低工资不能低于6000，没有管理者的员工不计算在内</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  manager_id,</span><br><span class="line">  <span class="keyword">MIN</span>(salary) 最低工资 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> manager_id <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> manager_id </span><br><span class="line"><span class="keyword">HAVING</span> 最低工资 &gt;= <span class="number">6000</span> ;</span><br></pre></td></tr></table></figure>

<p>4、查询所有部门的编号，员工数量和平均工资值，并按照平均工资降序</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  department_id,</span><br><span class="line">  <span class="keyword">COUNT</span>(*) 员工数量,</span><br><span class="line">  <span class="keyword">AVG</span>(salary) 平均工资 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 平均工资 <span class="keyword">DESC</span> ;</span><br></pre></td></tr></table></figure>

<p>5、选择具有各个job_id的员工人数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  job_id,</span><br><span class="line">  <span class="keyword">COUNT</span>(*) 员工人数 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id ;</span><br></pre></td></tr></table></figure>



<h3 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h3><p><strong>连接查询</strong>：又称为多表查询或者多表连接，当查询的字段来自于多个表或涉及到多个表时则要使用连接查询。</p>
<p><strong>笛卡尔乘积</strong>：假设表1有$m$行记录，表2有$n$行记录那么它们的笛卡尔积有$m\times n$行记录。笛卡尔积出现的原因时没有有效的连接条件。</p>
<p><strong>分类</strong></p>
<p>按照年代可以分为：</p>
<ul>
<li>SQL92标准(MySQL中仅仅支持内连接（可以忽略）</li>
<li>SQL99标准：支持所有的内连接+外连接(MySQL中不支持全外连接)+交叉连接</li>
</ul>
<p>按照功能可以分为：</p>
<ul>
<li>内连接<ul>
<li>等值连接</li>
<li>非等值连接</li>
<li>自连接</li>
</ul>
</li>
<li>外连接<ul>
<li>左外连接</li>
<li>右外连接</li>
<li>全外连接</li>
</ul>
</li>
<li>交叉连接</li>
</ul>
<h4 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h4><h5 id="SQL92标准"><a href="#SQL92标准" class="headerlink" title="SQL92标准"></a>SQL92标准</h5><p><font color="red">1、等值连接</font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询员工名和对应的部门名</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  department_name </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees,</span><br><span class="line">  departments </span><br><span class="line"><span class="keyword">WHERE</span> employees.department_id = departments.department_id ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#案例：查询员工名、工种号、工种名</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  e.job_id,</span><br><span class="line">  job_title </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e,</span><br><span class="line">  jobs j </span><br><span class="line"><span class="keyword">WHERE</span> e.job_id = j.job_id ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询有奖金的员工名和部门名</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  department_name </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e,</span><br><span class="line">  departments d </span><br><span class="line"><span class="keyword">WHERE</span> e.department_id = d.department_id </span><br><span class="line">  <span class="keyword">AND</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询城市名中第二个字符为o的对应的部门名和城市名</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  department_name,</span><br><span class="line">  city </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  departments d,</span><br><span class="line">  locations l </span><br><span class="line"><span class="keyword">WHERE</span> d.location_id = l.location_id </span><br><span class="line">  <span class="keyword">AND</span> city <span class="keyword">LIKE</span> <span class="string">'_o%'</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询每个城市的部门个数</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  city,</span><br><span class="line">  <span class="keyword">COUNT</span>(*) 部门个数 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  locations l,</span><br><span class="line">  departments d </span><br><span class="line"><span class="keyword">WHERE</span> l.location_id = d.location_id </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> city ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询出每个部门名和部门领导编号以及该部门的最低工资</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  d.department_id, </span><br><span class="line">  department_name,</span><br><span class="line">  d.manager_id,</span><br><span class="line">  <span class="keyword">MIN</span>(salary) 最低工资 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e,</span><br><span class="line">  departments d </span><br><span class="line"><span class="keyword">WHERE</span> e.department_id = d.department_id  </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> d.department_id ;</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：如果给表起了别名，就需要使用别名来访问有歧义的字段，原来的表名会失效。</p>
<p><font color="red">2、非等值连接</font></p>
<p>首先执行如下SQL语句，创建job_grade表并插入数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> job_grades (</span><br><span class="line">  grade_level <span class="built_in">VARCHAR</span> (<span class="number">3</span>),</span><br><span class="line">  lowest_sal <span class="built_in">INT</span>,</span><br><span class="line">  highest_sal <span class="built_in">INT</span></span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'A'</span>, <span class="number">1000</span>, <span class="number">2999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'B'</span>, <span class="number">3000</span>, <span class="number">5999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'C'</span>, <span class="number">6000</span>, <span class="number">9999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'D'</span>, <span class="number">10000</span>, <span class="number">14999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'E'</span>, <span class="number">15000</span>, <span class="number">24999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'F'</span>, <span class="number">25000</span>, <span class="number">40000</span>);</span><br></pre></td></tr></table></figure>

<p>非等值连接使用示例</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询员工的工资和工资级别</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  salary,</span><br><span class="line">  grade_level </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e,</span><br><span class="line">  job_grades </span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="keyword">BETWEEN</span> lowest_sal </span><br><span class="line">  <span class="keyword">AND</span> highest_sal ;</span><br></pre></td></tr></table></figure>

<p><font color="red">3、自连接</font></p>
<p>自连接就是做连接的两张表是同一个表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询员工名以及它上级的名字</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  e1.last_name 员工名,</span><br><span class="line">  e2.last_name 上级名 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e1,</span><br><span class="line">  employees e2 </span><br><span class="line"><span class="keyword">WHERE</span> e1.manager_id = e2.employee_id ;</span><br></pre></td></tr></table></figure>

<h5 id="SQL99标准"><a href="#SQL99标准" class="headerlink" title="SQL99标准"></a>SQL99标准</h5><p><strong>语法</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  查询列表 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  表<span class="number">1</span> 别名<span class="number">1</span> [连接类型] </span><br><span class="line">  <span class="keyword">JOIN</span> 表<span class="number">2</span> 别名<span class="number">2</span> </span><br><span class="line">    <span class="keyword">ON</span> 连接条件 </span><br><span class="line"><span class="keyword">WHERE</span> 筛选条件 </span><br><span class="line">[<span class="keyword">group</span> <span class="keyword">BY</span> 分组] </span><br><span class="line">[<span class="keyword">having</span> 分组后的筛选条件]</span><br><span class="line">[<span class="keyword">order</span> <span class="keyword">BY</span> 排序列表] ;</span><br></pre></td></tr></table></figure>



<p><font color="red">1、等值连接</font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询员工名、部门名</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  department_name </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e </span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line">    <span class="keyword">ON</span> e.department_id = d.department_id ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询名字中包含e的员工名和工种名（添加筛选）</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  job_title </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e </span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> jobs j </span><br><span class="line">    <span class="keyword">ON</span> e.job_id = j.job_id </span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%e%'</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询部门个数大于3的城市名和部门个数</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  city,</span><br><span class="line">  <span class="keyword">COUNT</span>(*) 部门个数 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  locations l </span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line">    <span class="keyword">ON</span> l.location_id = d.location_id </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> city </span><br><span class="line"><span class="keyword">HAVING</span> 部门个数 &gt; <span class="number">3</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询哪个部门的员工数&gt;3的部门名和员工个数，并按个数降序</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  department_name,</span><br><span class="line">  <span class="keyword">COUNT</span>(*) 员工个数 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e </span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line">    <span class="keyword">ON</span> e.department_id = d.department_id </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_name </span><br><span class="line"><span class="keyword">HAVING</span> 员工个数 &gt; <span class="number">3</span> </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 员工个数 <span class="keyword">DESC</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询员工名、部门名、工种名，并按部门名降序</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  department_name,</span><br><span class="line">  job_title </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e </span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line">    <span class="keyword">ON</span> e.department_id = d.department_id </span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> jobs j </span><br><span class="line">    <span class="keyword">ON</span> e.job_id = j.job_id </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> department_name <span class="keyword">DESC</span> ;</span><br></pre></td></tr></table></figure>



<p><font color="red">2、非等值连接</font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询员工的工资级别</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  salary,</span><br><span class="line">  grade_level </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e </span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job_grades </span><br><span class="line">    <span class="keyword">ON</span> salary <span class="keyword">BETWEEN</span> lowest_sal </span><br><span class="line">    <span class="keyword">AND</span> highest_sal ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询每个工资级别个数大于20的个数，并且按照工资级别降序</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  grade_level,</span><br><span class="line">  <span class="keyword">COUNT</span>(*) 个数 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e </span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job_grades jg</span><br><span class="line">    <span class="keyword">ON</span> salary <span class="keyword">BETWEEN</span> lowest_sal </span><br><span class="line">    <span class="keyword">AND</span> highest_sal </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> grade_level </span><br><span class="line"><span class="keyword">HAVING</span> 个数 &gt; <span class="number">20</span> </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> grade_level <span class="keyword">DESC</span> ;</span><br></pre></td></tr></table></figure>

<p><font color="red">3、自连接</font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询员工名字包含k的员工的名字和它上级的名字</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  e1.last_name 员工名,</span><br><span class="line">  e2.last_name 上级名 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e1 </span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> employees e2 </span><br><span class="line">    <span class="keyword">ON</span> e1.manager_id = e2.employee_id </span><br><span class="line"><span class="keyword">WHERE</span> e1.last_name <span class="keyword">LIKE</span> <span class="string">'%k%'</span> ;</span><br></pre></td></tr></table></figure>



<h4 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h4><p>一般用于查询一个表中有，另外一个表中没有的情况</p>
<p>外连接的查询结果=内连接结果+主表中有从表中没有的记录</p>
<p><strong>左外连接</strong></p>
<p><code>left [outer] join</code>，左边是主表</p>
<p><strong>右外连接</strong></p>
<p><code>right [outer] join</code>，右边是主表</p>
<p><strong>全外连接</strong></p>
<p><code>full [outer] join</code>，两边都是主表</p>
<p><strong>使用示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询哪个部门没有员工(左外连接实现)</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  department_name, </span><br><span class="line">  employee_id </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  departments d </span><br><span class="line">  <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> employees e </span><br><span class="line">    <span class="keyword">ON</span> d.department_id = e.department_id </span><br><span class="line"><span class="keyword">WHERE</span> employee_id <span class="keyword">IS</span> <span class="literal">NULL</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询你哪个部门没有员工(右外连接实现)</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  department_name,</span><br><span class="line">  employee_id </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e </span><br><span class="line">  <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line">    <span class="keyword">ON</span> e.department_id = d.department_id </span><br><span class="line"><span class="keyword">WHERE</span> employee_id <span class="keyword">IS</span> <span class="literal">NULL</span> ;</span><br></pre></td></tr></table></figure>

<p>MySQL不支持全外连接！</p>
<h4 id="交叉连接"><a href="#交叉连接" class="headerlink" title="交叉连接"></a>交叉连接</h4><p>交叉连接返回的就是两张表的笛卡尔积</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#departments和locations的笛卡尔积</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  department_id,</span><br><span class="line">  l.location_id </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  departments d </span><br><span class="line">  <span class="keyword">CROSS</span> <span class="keyword">JOIN</span> locations l ;</span><br></pre></td></tr></table></figure>



<h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><p><strong>概念</strong>：出现在其它语句中的select语句，称为<strong>子查询</strong>或<strong>内查询</strong>。外部的查询称为<strong>主查询</strong></p>
<p><strong>特点</strong>：</p>
<ol>
<li>子查询放在小括号内</li>
<li>子查询一般放在条件的右侧</li>
<li>标量子查询一般搭配单行操作符使用</li>
<li>列子查询一般搭配多行操作符使用：<code>in</code>、<code>not in</code>、<code>any</code>、<code>some</code>、<code>all</code></li>
<li>子查询优先于主查询（因为主查询用到了子查询的结果）</li>
</ol>
<blockquote>
<p>分类</p>
</blockquote>
<p><strong>按照结果集的行列数</strong></p>
<ul>
<li>标量子查询：结果集为一行一列</li>
<li>列子查询：结果集为一列多行</li>
<li>行子查询：结果集为一行多列</li>
<li>表子查询：结果集为多行多列</li>
</ul>
<p><strong>按子查询出现的位置</strong></p>
<ul>
<li><p>select后：仅仅支持标量子查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询每个部门的员工个数</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  d.*,</span><br><span class="line">  (<span class="keyword">SELECT</span> </span><br><span class="line">    <span class="keyword">COUNT</span>(*) </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees e </span><br><span class="line">  <span class="keyword">WHERE</span> e.department_id = d.department_id) 员工个数 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  departments d ;</span><br><span class="line">  </span><br><span class="line"><span class="comment">#查询员工号=102的部门名</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  (<span class="keyword">SELECT</span> </span><br><span class="line">    department_name </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    departments d </span><br><span class="line">  <span class="keyword">WHERE</span> d.department_id = e.department_id) 部门名 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e </span><br><span class="line"><span class="keyword">WHERE</span> employee_id = <span class="number">102</span> ;</span><br></pre></td></tr></table></figure>
</li>
<li><p>from后面：支持表子查询，将子查询的结果当作一张表，注意必须要为这个表起一个别名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询每个部门的平均工资的工资等级</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  a.department_name,</span><br><span class="line">  a.平均工资,</span><br><span class="line">  jg.grade_level 工资等级 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  (<span class="keyword">SELECT</span> </span><br><span class="line">    e.department_id,</span><br><span class="line">    department_name,</span><br><span class="line">    <span class="keyword">AVG</span>(salary) 平均工资 </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees e </span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d </span><br><span class="line">      <span class="keyword">ON</span> e.department_id = d.department_id </span><br><span class="line">  <span class="keyword">GROUP</span> <span class="keyword">BY</span> e.department_id) a </span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job_grades jg </span><br><span class="line">    <span class="keyword">ON</span> a.平均工资 <span class="keyword">BETWEEN</span> lowest_sal </span><br><span class="line">    <span class="keyword">AND</span> highest_sal ;</span><br></pre></td></tr></table></figure>
</li>
<li><p>where或having后面：标量子查询、列子查询、行子查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">  <span class="comment">#标量子查询</span></span><br><span class="line">  <span class="comment">#谁的工资比Abel高</span></span><br><span class="line">  <span class="keyword">SELECT</span> </span><br><span class="line">    last_name,</span><br><span class="line">    salary </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees </span><br><span class="line">  <span class="keyword">WHERE</span> salary &gt; </span><br><span class="line">    (<span class="keyword">SELECT</span> </span><br><span class="line">      salary </span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">      employees </span><br><span class="line">    <span class="keyword">WHERE</span> last_name = <span class="string">'Abel'</span>) ;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">#返回job_id与141号员工相同，salary比143号员工多的员工姓名、job_id和工资</span></span><br><span class="line">  <span class="keyword">SELECT</span> </span><br><span class="line">    last_name,</span><br><span class="line">    job_id,</span><br><span class="line">    salary </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees </span><br><span class="line">  <span class="keyword">WHERE</span> job_id = </span><br><span class="line">    (<span class="keyword">SELECT</span> </span><br><span class="line">      job_id </span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">      employees </span><br><span class="line">    <span class="keyword">WHERE</span> employee_id = <span class="number">141</span>) </span><br><span class="line">    <span class="keyword">AND</span> salary &gt; </span><br><span class="line">    (<span class="keyword">SELECT</span> </span><br><span class="line">      salary </span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">      employees </span><br><span class="line">    <span class="keyword">WHERE</span> employee_id = <span class="number">143</span>) ;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">#返回公司工资最少的员工的last_name,job_id和salary</span></span><br><span class="line">  <span class="keyword">SELECT</span> </span><br><span class="line">    last_name,</span><br><span class="line">    job_id,</span><br><span class="line">    salary </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees </span><br><span class="line">  <span class="keyword">WHERE</span> salary = </span><br><span class="line">    (<span class="keyword">SELECT</span> </span><br><span class="line">      <span class="keyword">MIN</span>(salary) </span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">      employees) ;</span><br><span class="line">      </span><br><span class="line">  <span class="comment">#查询最低工资大于50号部门的最低工资的部门id和其最低工资</span></span><br><span class="line">  <span class="keyword">SELECT</span> </span><br><span class="line">    a.department_id,</span><br><span class="line">    a.最低工资 </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    (<span class="keyword">SELECT</span> </span><br><span class="line">      department_id,</span><br><span class="line">      <span class="keyword">MIN</span>(salary) 最低工资 </span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">      employees </span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id) a </span><br><span class="line">  <span class="keyword">WHERE</span> a.最低工资 &gt; </span><br><span class="line">    (<span class="keyword">SELECT</span> </span><br><span class="line">      <span class="keyword">MIN</span>(salary) </span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">      employees </span><br><span class="line">    <span class="keyword">WHERE</span> department_id = <span class="number">50</span>) ;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">#列子查询</span></span><br><span class="line">  <span class="comment">#返回location_id是1400或1700的部门中所有员工的姓名</span></span><br><span class="line">  <span class="keyword">SELECT</span> </span><br><span class="line">    last_name </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees </span><br><span class="line">  <span class="keyword">WHERE</span> department_id <span class="keyword">IN</span> </span><br><span class="line">    (<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> </span><br><span class="line">      department_id </span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">      departments </span><br><span class="line">    <span class="keyword">WHERE</span> location_id <span class="keyword">IN</span> (<span class="number">1400</span>, <span class="number">1700</span>)) ;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">#返回其它部门中比job_id为'IT_PROG'部门任一工资低的员工的：工号、姓名、job_id以及salary</span></span><br><span class="line">  <span class="keyword">SELECT</span> </span><br><span class="line">    employee_id,</span><br><span class="line">    last_name,</span><br><span class="line">    job_id,</span><br><span class="line">    salary </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees </span><br><span class="line">  <span class="keyword">WHERE</span> salary &lt; <span class="keyword">ANY</span> </span><br><span class="line">    (<span class="keyword">SELECT</span> </span><br><span class="line">      salary </span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">      employees </span><br><span class="line">    <span class="keyword">WHERE</span> job_id = <span class="string">'IT_PROG'</span>) </span><br><span class="line">    <span class="keyword">AND</span> job_id &lt;&gt; <span class="string">'IT_PROG'</span> ;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">#行子查询</span></span><br><span class="line">  <span class="comment">#查询员工编号最小且工资最高的员工信息</span></span><br><span class="line">  <span class="keyword">SELECT</span> </span><br><span class="line">    * </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees </span><br><span class="line">  <span class="keyword">WHERE</span> employee_id = </span><br><span class="line">    (<span class="keyword">SELECT</span> </span><br><span class="line">      <span class="keyword">MIN</span>(employee_id) </span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">      employees) </span><br><span class="line">    <span class="keyword">AND</span> salary = </span><br><span class="line">    (<span class="keyword">SELECT</span> </span><br><span class="line">      <span class="keyword">MAX</span>(salary) </span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">      employees) ;</span><br><span class="line">      </span><br><span class="line">  <span class="comment">#使用行子查询实现</span></span><br><span class="line">  <span class="keyword">SELECT</span> </span><br><span class="line">    * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    employees </span><br><span class="line">  <span class="keyword">WHERE</span> (employee_id, salary) = </span><br><span class="line">    (<span class="keyword">SELECT</span> </span><br><span class="line">      <span class="keyword">MIN</span>(employee_id),</span><br><span class="line">      <span class="keyword">MAX</span>(salary) </span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">      employees) ;</span><br></pre></td></tr></table></figure>
</li>
<li><p>exists后面（相关子查询）：表子查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询有员工的部门名</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  department_name </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  departments d </span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> </span><br><span class="line">  (<span class="keyword">SELECT</span> </span><br><span class="line">    * </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees e </span><br><span class="line">  <span class="keyword">WHERE</span> e.department_id = d.department_id) ;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="练习-5"><a href="#练习-5" class="headerlink" title="练习"></a>练习</h4><p>1、查询和Zlotkey相同部门的员工姓名和工资</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  salary </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> department_id = </span><br><span class="line">  (<span class="keyword">SELECT</span> </span><br><span class="line">    department_id </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees </span><br><span class="line">  <span class="keyword">WHERE</span> last_name = <span class="string">'Zlotkey'</span>) ;</span><br></pre></td></tr></table></figure>

<p>2、查询工资比公司平均工资高的员工的员工号、姓名和工资</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询工资比公司平均工资高的员工的员工号、姓名和工资</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  employee_id,</span><br><span class="line">  last_name,</span><br><span class="line">  salary </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> salary &gt; </span><br><span class="line">  (<span class="keyword">SELECT</span> </span><br><span class="line">    <span class="keyword">AVG</span>(salary) </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees) ;</span><br></pre></td></tr></table></figure>

<p>3、查询各部门中工资比本部门平均工资高的员工的员工号、姓名和工资</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询各部门中工资比本部门平均工资高的员工的员工号、姓名和工资</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  employee_id,</span><br><span class="line">  last_name,</span><br><span class="line">  salary </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e1 </span><br><span class="line"><span class="keyword">WHERE</span> salary &gt; </span><br><span class="line">  (<span class="keyword">SELECT</span> </span><br><span class="line">    <span class="keyword">AVG</span>(salary) </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees e2 </span><br><span class="line">  <span class="keyword">WHERE</span> e2.department_id = e1.department_id) ;</span><br></pre></td></tr></table></figure>

<p>4、查询姓名中包含字母u的员工在相同部门的员工的员工号和姓名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  employee_id,</span><br><span class="line">  last_name </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="keyword">IN</span> </span><br><span class="line">  (<span class="keyword">SELECT</span> </span><br><span class="line">    department_id </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees </span><br><span class="line">  <span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%u%'</span>) ;</span><br></pre></td></tr></table></figure>

<p>5、查询在部门的location_id为1700的部门工作的员工的员工号</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  employee_id </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="keyword">IN</span> </span><br><span class="line">  (<span class="keyword">SELECT</span> </span><br><span class="line">    <span class="keyword">DISTINCT</span> department_id </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    departments </span><br><span class="line">  <span class="keyword">WHERE</span> location_id = <span class="number">1700</span>) ;</span><br></pre></td></tr></table></figure>

<p>6、查询管理者是King的员工姓名和工资</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  last_name,</span><br><span class="line">  salary </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> manager_id = </span><br><span class="line">  (<span class="keyword">SELECT</span> </span><br><span class="line">    employee_id </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees </span><br><span class="line">  <span class="keyword">WHERE</span> last_name = <span class="string">'King'</span>) ;</span><br></pre></td></tr></table></figure>



<h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><p><strong>语法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 查询列表</span><br><span class="line"><span class="keyword">from</span> 表名</span><br><span class="line">[<span class="keyword">join</span> <span class="keyword">type</span>] <span class="keyword">join</span> 表<span class="number">2</span></span><br><span class="line"><span class="keyword">on</span> 连接条件</span><br><span class="line"><span class="keyword">where</span> 筛选条件</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 分组字段</span><br><span class="line"><span class="keyword">having</span> 分组后的筛选</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 排序的字段</span><br><span class="line"><span class="keyword">limit</span> <span class="keyword">offset</span>, <span class="keyword">size</span>;</span><br></pre></td></tr></table></figure>

<p><code>offset</code>从0开始，表示开始显示的索引，<code>size</code>表示要显示的条目数，如果offset为0则可以省略</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询前5条员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>, <span class="number">5</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询第11条到第25条员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">10</span>, <span class="number">15</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询有奖金的员工信息，工资较高的前10名显示出来</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees </span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span> </span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>, <span class="number">10</span> ;</span><br></pre></td></tr></table></figure>

<p><strong>特点</strong>:</p>
<ol>
<li><p>limit语句放在最后（无论是执行顺序还是在语法中的位置）</p>
</li>
<li><p>分页公式：要显示的页数为<code>page</code>，每页的条目数为<code>size</code>，则分页的公式为：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">LIMIT (page-1)*size, size;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h4 id="练习-6"><a href="#练习-6" class="headerlink" title="练习"></a>练习</h4><p>已知表stuinfo</p>
<table>
<thead>
<tr>
<th align="center">字段</th>
<th align="center">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">id</td>
<td align="center">学号</td>
</tr>
<tr>
<td align="center">name</td>
<td align="center">姓名</td>
</tr>
<tr>
<td align="center">email</td>
<td align="center">邮箱</td>
</tr>
<tr>
<td align="center">grade_id</td>
<td align="center">年级编号</td>
</tr>
<tr>
<td align="center">sex</td>
<td align="center">性别</td>
</tr>
<tr>
<td align="center">age</td>
<td align="center">年龄</td>
</tr>
</tbody></table>
<p>和表grade</p>
<table>
<thead>
<tr>
<th align="center">字段</th>
<th align="center">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">id</td>
<td align="center">年级编号</td>
</tr>
<tr>
<td align="center">grade_name</td>
<td align="center">年级名称</td>
</tr>
</tbody></table>
<p>1、查询所有学院的邮箱的用户名（注：邮箱@前面的字符）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">substr</span>(email, <span class="keyword">instr</span>(email, <span class="string">'@'</span>)<span class="number">-1</span>) 用户名 <span class="keyword">from</span> stuinfo</span><br></pre></td></tr></table></figure>

<p>2、查询男生和女生的个数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) 个数 <span class="keyword">from</span> stuinfo <span class="keyword">group</span> <span class="keyword">by</span> sex;</span><br></pre></td></tr></table></figure>

<p>3、查询所有年龄大于18岁的学生的姓名和年级名称</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, grade_name </span><br><span class="line"><span class="keyword">from</span> stuinfo s <span class="keyword">inner</span> <span class="keyword">join</span> grade g </span><br><span class="line"><span class="keyword">on</span> s.grade_id=g.id </span><br><span class="line"><span class="keyword">where</span> age&gt;<span class="number">18</span>;</span><br></pre></td></tr></table></figure>

<p>4、查询哪个年级的学生最小年龄大于20岁</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> grade_name, <span class="keyword">min</span>(age) 最小年龄 </span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">inner</span> <span class="keyword">join</span> stuinfo s</span><br><span class="line"><span class="keyword">on</span> g.id=s.grade_id </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> grade_name </span><br><span class="line"><span class="keyword">having</span> 最小年龄&gt;<span class="number">20</span>;</span><br></pre></td></tr></table></figure>



<h3 id="union联合查询（了解"><a href="#union联合查询（了解" class="headerlink" title="union联合查询（了解)"></a>union联合查询（了解)</h3><p><code>union</code>：联合、合并，将多条查询语句的结果合并成一个结果</p>
<p><strong>应用场景</strong>：要查询的结果来自于多个表，且多个表没有直接的连接关系，但是查询的信息一致时</p>
<p><strong>特点</strong>:</p>
<ol>
<li>要求多条查询语句的查询列数是一致的！</li>
<li>要求多条查询语句查询的每一列的类型和顺序最好是一致的</li>
<li><code>union</code>关键字默认去除重复项，如果使用<code>union all</code>可以包含重复项</li>
</ol>
]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>DQL</tag>
      </tags>
  </entry>
  <entry>
    <title>DML语言学习</title>
    <url>/2020/06/22/DML%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="DML语言学习"><a href="#DML语言学习" class="headerlink" title="DML语言学习"></a>DML语言学习</h2><p>DML：Data Manipulation Language，数据操纵语言，用于数据的<code>INSERT</code>、<code>DELETE</code>、<code>UPDATE</code></p>
<h3 id="INSERT语句"><a href="#INSERT语句" class="headerlink" title="INSERT语句"></a>INSERT语句</h3><p><strong>语法</strong>：</p>
<blockquote>
<p>方式一：</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(列名,...) <span class="keyword">values</span>(值<span class="number">1</span>,...);</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span>(值<span class="number">1</span>,...);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>方式二：</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">set</span> 列名=值,...,列名=值;</span><br></pre></td></tr></table></figure>

<p><strong>两种方式的比较</strong>：</p>
<ol>
<li><p>方式一支持插入多条数据，而方式二不支持</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu(<span class="keyword">id</span>, <span class="keyword">name</span>, age)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">1001</span>, <span class="string">'张三'</span>, <span class="number">20</span>), (<span class="number">1002</span>, <span class="string">'李四'</span>, <span class="number">21</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>方式一还支持子查询，方式二不支持</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu(<span class="keyword">id</span>, <span class="keyword">name</span>, age) </span><br><span class="line"><span class="keyword">select</span> <span class="number">1001</span>, <span class="string">'张三'</span>, <span class="number">20</span>;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p><strong>要求</strong>：</p>
<ol>
<li>插入的值的类型要与列的类型一致或兼容</li>
<li>不可以为null的列必须插入值，可以为null的列如果不想插入值有两种方式<ul>
<li>插入null</li>
<li>在给出的列中去掉这个可以为null的列</li>
</ul>
</li>
<li>列的顺序可以颠倒，只要和插入的值一一对应即可</li>
<li>列和值的个数必须保持一致</li>
<li>可以省略列名，默认为所有列名，而且列的顺序和表中列的顺序一致</li>
</ol>
<h3 id="UPDATE语句"><a href="#UPDATE语句" class="headerlink" title="UPDATE语句"></a>UPDATE语句</h3><h4 id="修改单表的记录"><a href="#修改单表的记录" class="headerlink" title="修改单表的记录"></a>修改单表的记录</h4><p><strong>语法</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 							//<span class="number">1</span></span><br><span class="line"><span class="keyword">set</span> 列=新值,...列=新值 				 //<span class="number">3</span></span><br><span class="line"><span class="keyword">where</span> 筛选条件;						  //2</span><br></pre></td></tr></table></figure>

<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> stu </span><br><span class="line"><span class="keyword">set</span> <span class="keyword">name</span>=<span class="string">'王五'</span>, age=<span class="number">30</span> </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1001</span>;</span><br></pre></td></tr></table></figure>



<h4 id="修改多表的记录（级联更新）"><a href="#修改多表的记录（级联更新）" class="headerlink" title="修改多表的记录（级联更新）"></a>修改多表的记录（级联更新）</h4><p><strong>SQL92语法</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> 表<span class="number">1</span> 别名<span class="number">1</span>, 表<span class="number">2</span> 别名<span class="number">2</span> </span><br><span class="line"><span class="keyword">set</span> 列=值,...,列=值 </span><br><span class="line"><span class="keyword">where</span> 连接条件 </span><br><span class="line"><span class="keyword">and</span> 筛选条件;</span><br></pre></td></tr></table></figure>

<p><strong>SQL99语法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> 表<span class="number">1</span> 别名<span class="number">1</span> <span class="keyword">inner</span>|<span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> 表<span class="number">2</span> 别名<span class="number">2</span> </span><br><span class="line"><span class="keyword">on</span> 连接条件 </span><br><span class="line"><span class="keyword">set</span> 列=值,...,列=值 </span><br><span class="line"><span class="keyword">where</span> 筛选条件;</span><br></pre></td></tr></table></figure>



<h3 id="DELETE语句"><a href="#DELETE语句" class="headerlink" title="DELETE语句"></a>DELETE语句</h3><p><strong>语法</strong></p>
<p>单表删除：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 筛选条件;</span><br></pre></td></tr></table></figure>

<p>多表删除：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#SQL92</span></span><br><span class="line"><span class="keyword">delete</span> 别名<span class="number">1</span>, 别名<span class="number">2</span> </span><br><span class="line"><span class="keyword">from</span> 表<span class="number">1</span> 别名<span class="number">1</span>, 表<span class="number">2</span> 别名<span class="number">2</span> </span><br><span class="line"><span class="keyword">where</span> 连接条件 </span><br><span class="line"><span class="keyword">and</span> 筛选条件;</span><br><span class="line"></span><br><span class="line"><span class="comment">#SQL99</span></span><br><span class="line"><span class="keyword">delete</span> 别名<span class="number">1</span>, 别名<span class="number">2</span> </span><br><span class="line"><span class="keyword">from</span> 表<span class="number">1</span> 别名<span class="number">1</span> <span class="keyword">inner</span>|<span class="keyword">left</span>|<span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> 表<span class="number">2</span> 别名<span class="number">2</span> </span><br><span class="line"><span class="keyword">on</span> 连接条件 </span><br><span class="line"><span class="keyword">where</span> 筛选条件;</span><br></pre></td></tr></table></figure>

<p><strong>清空表</strong></p>
<p>清空数据，实际上是删除这个表，然后再创建</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名;</span><br></pre></td></tr></table></figure>



<p><strong>delete和truncate的区别</strong>：</p>
<ol>
<li>delete可以加where条件语句，truncate不可以</li>
<li>truncate删除的效率高一点</li>
<li>如果存在自增长列，delete后插入会继续增加，而truncate后再插入则会从1开始</li>
<li>truncate删除没有返回值，delete删除会返回受影响的记录数</li>
<li>truncate不能回滚，delete可以回滚</li>
</ol>
<h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>运行以下SQL语句，创建my_employees和users表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> my_employees (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">INT</span> (<span class="number">10</span>),</span><br><span class="line">  frist_name <span class="built_in">VARCHAR</span> (<span class="number">10</span>),</span><br><span class="line">  last_name <span class="built_in">VARCHAR</span> (<span class="number">10</span>),</span><br><span class="line">  user_id <span class="built_in">VARCHAR</span> (<span class="number">10</span>),</span><br><span class="line">  salary <span class="keyword">DOUBLE</span> (<span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">users</span> (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">INT</span>,</span><br><span class="line">  user_id <span class="built_in">VARCHAR</span> (<span class="number">10</span>),</span><br><span class="line">  department_id <span class="built_in">INT</span></span><br><span class="line">) ;</span><br></pre></td></tr></table></figure>

<p>1、显示my_employees的表结构</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DESC my_employees;</span><br></pre></td></tr></table></figure>

<p>2、向my_employees表中插入数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> my_employees </span><br><span class="line"><span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>, <span class="string">'patel'</span>, <span class="string">'Ralph'</span>, <span class="string">'Rpatel'</span>, <span class="number">895</span>), </span><br><span class="line">(<span class="number">2</span>, <span class="string">'Dancs'</span>, <span class="string">'Betty'</span>, <span class="string">'Bdancs'</span>, <span class="number">860</span>), </span><br><span class="line">(<span class="number">3</span>, <span class="string">'Biri'</span>, <span class="string">'Ben'</span>, <span class="string">'Bbiri'</span>, <span class="number">1100</span>), </span><br><span class="line">(<span class="number">4</span>, <span class="string">'Newman'</span>, <span class="string">'Chad'</span>, <span class="string">'Cnewman'</span>, <span class="number">750</span>), </span><br><span class="line">(<span class="number">5</span>, <span class="string">'Ropeburn'</span>, <span class="string">'Audrey'</span>, <span class="string">'Aropebur'</span>, <span class="number">1550</span>);</span><br></pre></td></tr></table></figure>

<p>3、向user表中插入数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">users</span> </span><br><span class="line"><span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>, <span class="string">'Rpatel'</span>, <span class="number">10</span>), </span><br><span class="line">(<span class="number">2</span>, <span class="string">'Bdancs'</span>, <span class="number">10</span>), </span><br><span class="line">(<span class="number">3</span>, <span class="string">'Bbiri'</span>, <span class="number">20</span>), </span><br><span class="line">(<span class="number">4</span>, <span class="string">'Cnewman'</span>, <span class="number">30</span>), </span><br><span class="line">(<span class="number">5</span>, <span class="string">'Aropebur'</span>, <span class="number">40</span>);</span><br></pre></td></tr></table></figure>

<p>4、将3号员工的last_name修改为“drelxer”</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> </span><br><span class="line">  my_employees </span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">  last_name = <span class="string">'drelxer'</span> </span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">3</span> ;</span><br></pre></td></tr></table></figure>

<p>5、将所有工资少于900的员工的工资修改为1000</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> </span><br><span class="line">  my_employees </span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">  salary = <span class="number">1000</span> </span><br><span class="line"><span class="keyword">WHERE</span> salary &lt; <span class="number">900</span> ;</span><br></pre></td></tr></table></figure>

<p>6、将userid 为Bbiri的user表和my_employees表的记录全部删除</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> </span><br><span class="line">  u,</span><br><span class="line">  e </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  <span class="keyword">users</span> u </span><br><span class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> my_employees e </span><br><span class="line">    <span class="keyword">ON</span> u.user_id = e.user_id </span><br><span class="line"><span class="keyword">WHERE</span> u.user_id = <span class="string">'Bbiri'</span> ;</span><br></pre></td></tr></table></figure>

<p>7、删除所有表中的数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> my_employees;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">users</span>;</span><br></pre></td></tr></table></figure>

<p>8、清空表中的数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> my_employees;</span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> <span class="keyword">users</span>;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>DML</tag>
      </tags>
  </entry>
  <entry>
    <title>DDL语言的学习</title>
    <url>/2020/06/24/DDL%E8%AF%AD%E8%A8%80%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="DDL语言的学习"><a href="#DDL语言的学习" class="headerlink" title="DDL语言的学习"></a>DDL语言的学习</h2><h3 id="库和表的管理"><a href="#库和表的管理" class="headerlink" title="库和表的管理"></a>库和表的管理</h3><h4 id="库的管理"><a href="#库的管理" class="headerlink" title="库的管理"></a>库的管理</h4><p><strong>创建库</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> [<span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span>] 数据库名;</span><br></pre></td></tr></table></figure>

<p><strong>修改库</strong>（不推荐修改库）</p>
<p>修改库的字符集</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> 库名 <span class="built_in">character</span> <span class="keyword">set</span> 字符集名称;</span><br></pre></td></tr></table></figure>

<p><strong>删除数据库</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> [<span class="keyword">if</span> <span class="keyword">exists</span>] 数据库名;</span><br></pre></td></tr></table></figure>



<h4 id="表的管理"><a href="#表的管理" class="headerlink" title="表的管理"></a>表的管理</h4><p><strong>创建表</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> [<span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span>] 表名(</span><br><span class="line">    列名 列的类型[(长度) 约束]</span><br><span class="line">    ......</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建book表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> book (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">INT</span>,<span class="comment">#书籍编号</span></span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>),<span class="comment">#书籍名称</span></span><br><span class="line">  price <span class="keyword">DOUBLE</span>,<span class="comment">#书籍价格</span></span><br><span class="line">  author_id <span class="built_in">INT</span>,<span class="comment">#作者编号</span></span><br><span class="line">  publish_date DATETIME<span class="comment">#书籍出版日期</span></span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建author表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> author (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">INT</span>,<span class="comment">#作者编号</span></span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">VARCHAR</span> (<span class="number">20</span>),<span class="comment">#作者姓名</span></span><br><span class="line">  nation <span class="built_in">VARCHAR</span> (<span class="number">20</span>) <span class="comment">#作者国籍</span></span><br><span class="line">) ;</span><br></pre></td></tr></table></figure>



<p><strong>表的修改</strong></p>
<ul>
<li><p>修改列名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">change</span> [<span class="keyword">column</span>] 旧列名 新列名 列类型;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改列类型或约束</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">modify</span> <span class="keyword">column</span> 列名 类型和约束;</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加新列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">column</span> 新列名 类型和约束 [<span class="keyword">first</span>|<span class="keyword">after</span> 列名];</span><br></pre></td></tr></table></figure>

<p>可以将新列添加到第一列或者指定列的后面</p>
</li>
<li><p>删除列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">column</span> 列名;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改表名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 旧表名 <span class="keyword">rename</span> [<span class="keyword">to</span>] 新表名;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<p><strong>表的删除</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> [<span class="keyword">if</span> <span class="keyword">exists</span>] 表名;</span><br></pre></td></tr></table></figure>



<p><strong>表的复制</strong></p>
<ol>
<li><p>复制表结构</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名 <span class="keyword">like</span> 要复制的表;</span><br></pre></td></tr></table></figure>
</li>
<li><p>复制表的结构外加数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名 </span><br><span class="line"><span class="keyword">select</span> 要复制的列 <span class="keyword">from</span> 要复制的表 </span><br><span class="line"><span class="keyword">where</span> 筛选条件;</span><br></pre></td></tr></table></figure>





</li>
</ol>
<h3 id="常见数据类型介绍"><a href="#常见数据类型介绍" class="headerlink" title="常见数据类型介绍"></a>常见数据类型介绍</h3><h4 id="数值型"><a href="#数值型" class="headerlink" title="数值型"></a>数值型</h4><p><font color="red">1、整型</font></p>
<ul>
<li><code>tinyint</code>：1字节</li>
<li><code>smallint</code>：2字节</li>
<li><code>mediumint</code>：3字节</li>
<li><code>int</code>或<code>integer</code>：4字节</li>
<li><code>bigint</code>：8字节</li>
</ul>
<p><strong>特点</strong>：</p>
<ol>
<li><p>如果不设置无符号还是有符号，默认是有符号，如果想要设置无符号，需要添加<code>unsigned</code>关键字</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tab_int(</span><br><span class="line">	t1 <span class="built_in">int</span>, </span><br><span class="line">    t2 <span class="built_in">int</span> <span class="keyword">unsigned</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果插入的值超过了整型的临界值，则会给出一个警告，并插入整型的临界值</p>
</li>
<li><p>如果不设置长度，会有默认的长度</p>
<p>长度代表了<strong>显示</strong>的最大宽度，如果不够会用零在左边填充，但必须搭配<code>zerofill</code>填充，并且变为无符号整型</p>
</li>
</ol>
<p><font color="red">2、小数</font></p>
<ul>
<li>定点数<ul>
<li><code>dec(M, D)</code>或者<code>decimal(M, D)</code>：<code>M+2</code>个字节</li>
</ul>
</li>
<li>浮点数<ul>
<li><code>float(M, D)</code>：4字节</li>
<li><code>double(M, D)</code>：8字节</li>
</ul>
</li>
</ul>
<p><strong>特点</strong></p>
<ol>
<li><code>M</code>代表的是整数位数+小数位数，<code>D</code>代表小数位数</li>
<li><code>M</code>和<code>D</code>可以省略，如果是<code>decimal</code>则<code>M</code>默认为10，<code>D</code>默认为0，<code>float</code>和<code>double</code>会根据插入的值的精度来决定精度</li>
<li>定点型的精度比较高，如果要求插入的精度比较高则选择<code>decimal</code>，如银行货币等</li>
</ol>
<p><strong>原则</strong>：所选择的类型越简单越好，能保存的数值的类型越小越好</p>
<h4 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h4><ul>
<li><p><strong>较短文本</strong></p>
<ul>
<li><p><code>char(M)</code>：最多M个字符（不是字节数），固定长度的字符，相对效率较高，M可以省略，默认为1</p>
</li>
<li><p><code>varchar(M)</code>：最多M个字符（不是字节数），可变长度的字符，相对效率较低，M不可以省略</p>
</li>
<li><p><code>binary</code>和<code>varbinary</code>：用于保存二进制字符串</p>
</li>
<li><p><code>Enum</code>类型</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> tab_char;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab_char(</span><br><span class="line">	c1 ENUM(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>)</span><br><span class="line">);</span><br><span class="line">DESC tab_char;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_char <span class="keyword">VALUES</span>(<span class="string">'a'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_char <span class="keyword">VALUES</span>(<span class="string">'b'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_char <span class="keyword">VALUES</span>(<span class="string">'c'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_char <span class="keyword">VALUES</span>(<span class="string">'d'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_char <span class="keyword">VALUES</span>(<span class="string">'A'</span>);<span class="comment">#不区分大小写</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tab_char;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>Set</code>类型：里面可以保存0~64个元素，类型可以不同</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab_set(</span><br><span class="line">    s1 <span class="keyword">SET</span>(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_set <span class="keyword">VALUES</span>(<span class="string">'a'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_set <span class="keyword">VALUES</span>(<span class="string">'b'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_set <span class="keyword">VALUES</span>(<span class="string">'c'</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p><strong>较长的文本</strong></p>
<p><code>text</code>：长文本</p>
<p><code>blob</code>：长二进制文本（一般实际开发中不会把二进制的文件，例如图像、视频、音频等存入数据库中，存储的往往是它们的文件存储路径）</p>
</li>
</ul>
<h4 id="日期型"><a href="#日期型" class="headerlink" title="日期型"></a>日期型</h4><table>
<thead>
<tr>
<th align="center">日期和时间类型</th>
<th align="center">字节</th>
<th align="center">最小值</th>
<th align="center">最大值</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>date</code></td>
<td align="center">4</td>
<td align="center">1000-01-01</td>
<td align="center">9999-12-31</td>
</tr>
<tr>
<td align="center"><code>datetime</code></td>
<td align="center">8</td>
<td align="center">1000-01-01 00:00:00</td>
<td align="center">9999-12-31 23:59:59</td>
</tr>
<tr>
<td align="center"><code>timestamp</code></td>
<td align="center">4</td>
<td align="center">19700101080001</td>
<td align="center">2038年的某个时刻</td>
</tr>
<tr>
<td align="center"><code>time</code></td>
<td align="center">3</td>
<td align="center">-838:59:59</td>
<td align="center">838:59:59</td>
</tr>
<tr>
<td align="center"><code>year</code></td>
<td align="center">1</td>
<td align="center">1901</td>
<td align="center">2155</td>
</tr>
</tbody></table>
<p><strong>区别</strong></p>
<ol>
<li>timestamp的取值范围较小，datetime的取值范围较大</li>
<li>timestamp和实际的时区有关，更能够反应实际的日期，而datetime则只能反映出插入时的当地时区</li>
<li>timestamp的属性受到<strong>MySQL版本</strong>和<strong>SQL Mode</strong>的影响很大</li>
</ol>
<h3 id="常见约束"><a href="#常见约束" class="headerlink" title="常见约束"></a>常见约束</h3><h4 id="约束的概念和分类"><a href="#约束的概念和分类" class="headerlink" title="约束的概念和分类"></a>约束的概念和分类</h4><p><strong>什么是约束？</strong></p>
<ul>
<li>为了保证<strong>数据的一致性和完整性</strong>，SQL规范以约束的方式对表数据进行<strong>额外的条件限制</strong></li>
<li>约束是表级的强制规定</li>
<li>可以在创建表时规定约束，也可以在修改表的时候修改或增加删除约束</li>
</ul>
<p><strong>约束的分类</strong></p>
<ul>
<li>非空约束：<code>not null</code>，规定某个字段不能为空</li>
<li>唯一约束：<code>unique</code>，规定某个字段在整个表中唯一</li>
<li>主键约束：<code>primary key</code>，主键（唯一且非空）</li>
<li>外键约束：<code>foreign key</code>，外键</li>
<li>检查约束：<code>check</code>，判断是否符合条件</li>
<li>默认约束：<code>default</code>，默认值</li>
</ul>
<p>MySQL不支持检查约束，虽然语法上不会报错，但是没有任何效果，具体细节可以参考W3Cschool手册</p>
<h4 id="列级约束和表级约束"><a href="#列级约束和表级约束" class="headerlink" title="列级约束和表级约束"></a>列级约束和表级约束</h4><ul>
<li>列级约束：每个约束只能作用在一个列上，跟在列的定义后面，六种约束都可以，但是外键约束没有效果</li>
<li>表级约束：可以作用在多个列上，单独定义，除了非空和默认都支持</li>
</ul>
<p><strong>语法</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[constraint 约束名] 约束类型(字段) [references 表名(字段)]</span><br></pre></td></tr></table></figure>

<p><strong>通用写法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> major(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> stuinfo(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>, </span><br><span class="line">stuname <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>, </span><br><span class="line">sex <span class="built_in">CHAR</span>(<span class="number">1</span>), </span><br><span class="line">age <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">18</span>, </span><br><span class="line">seat <span class="built_in">INT</span> <span class="keyword">UNIQUE</span>, </span><br><span class="line">majorid <span class="built_in">INT</span>, </span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_stuinfo_major <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(majorid) <span class="keyword">REFERENCES</span> major(<span class="keyword">id</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p><strong>列级约束和表级约束对比</strong></p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">位置</th>
<th align="center">支持的约束类型</th>
<th align="center">是否可以起约束名</th>
</tr>
</thead>
<tbody><tr>
<td align="center">列级约束</td>
<td align="center">列的后面</td>
<td align="center">语法都支持，但是外键没有效果</td>
<td align="center">不可以</td>
</tr>
<tr>
<td align="center">表级约束</td>
<td align="center">所有列的下面</td>
<td align="center">默认和非空不支持，其它都支持</td>
<td align="center">可以，但是主键没有效果</td>
</tr>
</tbody></table>
<p><strong>主键和唯一对比</strong></p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">保证唯一性</th>
<th align="center">是否允许为空</th>
<th align="center">一个表中可以有多少个</th>
<th align="center">是否允许组合</th>
</tr>
</thead>
<tbody><tr>
<td align="center">主键约束</td>
<td align="center">√</td>
<td align="center">×</td>
<td align="center">至多一个</td>
<td align="center">√，不推荐</td>
</tr>
<tr>
<td align="center">唯一约束</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">可以有多个</td>
<td align="center">√，不推荐</td>
</tr>
</tbody></table>
<h4 id="外键的特点"><a href="#外键的特点" class="headerlink" title="外键的特点"></a>外键的特点</h4><ol>
<li>要求在从表设置外键关系</li>
<li>从表的外键列的类型和主表（引用的表）的关联列的类型要一致或兼容，名称没有要求</li>
<li>要求主表中的关联列必须是个key（一般是主键或者唯一键）</li>
<li>要求插入数据时，主表先插入数据，从表再插入数据；删除数据时，从表先删除数据，主表再删除数据</li>
</ol>
<h4 id="修改表时添加约束"><a href="#修改表时添加约束" class="headerlink" title="修改表时添加约束"></a>修改表时添加约束</h4><p><strong>列级约束的写法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">modify</span> <span class="keyword">column</span> 列名 列类型 约束;</span><br></pre></td></tr></table></figure>

<p><strong>表级约束的写法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">add</span> [<span class="keyword">constraint</span> 约束名] 约束(字段) [<span class="keyword">references</span> 表名(字段)];</span><br></pre></td></tr></table></figure>



<h4 id="修改表时删除约束"><a href="#修改表时删除约束" class="headerlink" title="修改表时删除约束"></a>修改表时删除约束</h4><p><strong>语法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">modify</span> <span class="keyword">column</span> 列名 列类型;</span><br></pre></td></tr></table></figure>

<p><strong>删除主键约束</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> primary <span class="keyword">key</span>;</span><br></pre></td></tr></table></figure>

<p><strong>删除唯一约束</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">index</span> 约束名;</span><br></pre></td></tr></table></figure>

<p>可以通过<code>show index from 表名</code>来查询约束名</p>
<p><strong>删除外键约束</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">foreign</span> <span class="keyword">key</span> 外键名;</span><br></pre></td></tr></table></figure>



<h4 id="标识列（自增长列）"><a href="#标识列（自增长列）" class="headerlink" title="标识列（自增长列）"></a>标识列（自增长列）</h4><p><strong>标识列</strong>：可以不用手动插入值，系统提供默认的序列值（从1开始）</p>
<p>使用示例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> stu;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> stu(</span><br><span class="line">	<span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment, </span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu <span class="keyword">values</span>(<span class="literal">null</span>, <span class="string">'张三'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu <span class="keyword">values</span>(<span class="literal">null</span>, <span class="string">'李四'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure>

<p>MySQL中不支持设置标识列的起始值，但是可以通过如下方式设置增量值</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> auto_increment_increment=<span class="number">3</span>;</span><br></pre></td></tr></table></figure>

<p>但是一般不推荐修改</p>
<h4 id="级联操作（了解）"><a href="#级联操作（了解）" class="headerlink" title="级联操作（了解）"></a>级联操作（了解）</h4><p>在添加外键约束的最后加上，即可实现级联删除</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">on <span class="keyword">delete</span> <span class="keyword">cascade</span>;</span><br></pre></td></tr></table></figure>

<p><strong>级联置空</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">on <span class="keyword">delete</span> <span class="keyword">set</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>DDL</tag>
      </tags>
  </entry>
  <entry>
    <title>TCL语言学习</title>
    <url>/2020/06/24/TCL%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="TCL语言学习"><a href="#TCL语言学习" class="headerlink" title="TCL语言学习"></a>TCL语言学习</h2><p>TCL：Transaction Control Language，事务控制语言。</p>
<p><strong>事务</strong>：事务由单独单元的一个或多个SQL语句组成，在这个单元中，每个SQL语句都是相互依赖的。而整个单独单元作为一个<strong>不可分割</strong>的整体，如果单元中某条SQL语句的执行发生了错误，整个单元就会回滚。所有受到影响的数据将回滚到事务发生之前的状态；只有当单元中的<strong>所有</strong>SQL语句都顺利执行，事务才能顺利执行！</p>
<p><strong>MySQL的存储引擎（了解）</strong></p>
<p>1、概念：在MySQL中的数据用各种不同的技术存储在文件（或内存）中</p>
<p>2、通过<code>show engines;</code>来查看MySQL支持的存储引擎</p>
<p>3、在MySQL中用的最多的存储引擎有：<code>innodb</code>、<code>myisam</code>、<code>memory</code>等。其中<code>innodb</code>支持事务，而<code>myisam</code>和<code>memory</code>不支持事务</p>
<h3 id="事务的特点"><a href="#事务的特点" class="headerlink" title="事务的特点"></a>事务的特点</h3><p>事务的特点（ACID）</p>
<ol>
<li><p>原子性（Atomicity）</p>
<p>原子性是指事务是一个不可分割的工作单位，事务的操作要么都发生，要么都不发生</p>
</li>
<li><p>一致性（Consistency）</p>
<p>事务必须使得数据库从一个一致性状态转换到另一个一致性状态</p>
</li>
<li><p>隔离性（Isolation）</p>
<p>事务的隔离性是指一个事务的执行不能被其它事务干扰，即一个一个事务内部的操作及使用的数据对并发的其它事务是隔离的，并发执行的各个事务之间不能相互干扰</p>
</li>
<li><p>持久性（Durability）</p>
<p>持久性是指一个事务一旦被提交，它对数据库中的数据的改变就是永久性的，接下来的其它操作和数据库故障不应该对其由任何影响。</p>
</li>
</ol>
<h3 id="事务的创建"><a href="#事务的创建" class="headerlink" title="事务的创建"></a>事务的创建</h3><p><strong>隐式事务</strong>：事务没有明显的开启和结束标记。比如：<code>insert</code>、<code>update</code>、<code>delete</code>语句</p>
<p>可以通过<code>show variables like ‘autocommit;</code>来查看是否开启了事务的自动提交，如果开启了，那么每个SQL语句都会作为一个事务自动提交（commit）</p>
<p><strong>显式事务</strong>：事务具有明显的开启和结束标记。</p>
<p>要使用显式事务，首先需要手动禁用自动提交功能</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> autocommit=<span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<p>注意，该命令仅仅对本次会话有效。</p>
<p><strong>事务的创建步骤</strong></p>
<ol>
<li><p>开启事务</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> autocommit=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">begin</span> <span class="keyword">transaction</span>; <span class="comment">#可以省略</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>编写事务中的SQL语句</p>
</li>
<li><p>结束事务</p>
<ul>
<li>提交事务：<code>commit;</code></li>
<li>回滚事务：<code>rollback;</code></li>
</ul>
</li>
</ol>
<h3 id="数据库的隔离级别"><a href="#数据库的隔离级别" class="headerlink" title="数据库的隔离级别"></a>数据库的隔离级别</h3><p><strong>事务的并发会引发的问题</strong></p>
<p>对于同时运行的多个事务，当这些事务访问数据库中<strong>相同</strong>的数据时，如果没有采取必要的隔离机制，就会导致各种问题：</p>
<ul>
<li><strong>脏读</strong>：对于两个事务T1、T2，T1读取了已经被T2更新但是还没有修改的字段之后，若T2回滚，T1读取的内容就是临时且无效的</li>
<li><strong>不可重复读</strong>：对于两个事务T1、T2，T1读取了一个字段，然后T2更新了该字段之后，T1再次读取同一个字段，值就不相同了</li>
<li><strong>幻读</strong>：对于两个事务T1、T2，T1从表中读取了一个字段，然后T2在表中插入了一些新的数据后，如果T1再次读取同一个表，就会多出几行记录</li>
</ul>
<p><strong>数据的隔离界别</strong></p>
<ul>
<li><code>READ UNCOMMITTED</code>：读取未提交的数据，最低的隔离级别，解决不了任何事务并发问题</li>
<li><code>READ COMMITTED</code>：读取已提交的数据，可以避免脏读的问题，不能解决不可重复读和幻读的问题</li>
<li><code>REPEATABLE READ</code>：可以重复读，可以解决脏读、不可重复读的问题，但是会出现幻读</li>
<li><code>SERIALIZABLE</code>：串行化，效率最低，隔离级别最高，解决了所有的事务并发问题</li>
</ul>
<p>Oracle支持<code>READ COMMITTED</code>和<code>SERIALIZABLE</code>，默认为<code>READ COMMITTED</code></p>
<p>MySQL支持四种隔离界别，默认为<code>REPEATABLE READ</code></p>
<p><strong>查询数据库的隔离级别</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> @@tx_isolation;</span><br></pre></td></tr></table></figure>

<p><strong>设置数据库的隔离界别</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> 隔离级别;</span><br></pre></td></tr></table></figure>



<p>Tips：</p>
<ul>
<li><p>每启动一个MySQL程序，就会获得一个单独的数据库连接，每个数据库连接都有一个全局变量<code>@@tx_isolation</code>，表示当前的事务隔离级别</p>
</li>
<li><p>设置数据库的全局隔离级别</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> 隔离级别;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h3 id="回滚点的使用"><a href="#回滚点的使用" class="headerlink" title="回滚点的使用"></a>回滚点的使用</h3><p><strong>设置保存点</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">savepoint</span> 保存点名;</span><br></pre></td></tr></table></figure>

<p><strong>回滚到指定的保存点</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">rollback</span> <span class="keyword">to</span> 保存点名;</span><br></pre></td></tr></table></figure>



<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#回滚点的使用</span></span><br><span class="line"><span class="keyword">SET</span> autocommit=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">account</span> <span class="keyword">VALUES</span>(<span class="string">'张三'</span>, <span class="number">10000</span>);</span><br><span class="line"><span class="keyword">SAVEPOINT</span> p1;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">account</span> <span class="keyword">VALUES</span>(<span class="string">'李四'</span>, <span class="number">20000</span>);</span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> p1;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>TCL</tag>
      </tags>
  </entry>
  <entry>
    <title>变量</title>
    <url>/2020/06/24/%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p><strong>分类</strong></p>
<ul>
<li>系统变量<ul>
<li>全局变量</li>
<li>会话变量</li>
</ul>
</li>
<li>自定义变量<ul>
<li>用户变量</li>
<li>局部变量</li>
</ul>
</li>
</ul>
<h3 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h3><p>变量由系统提供，不是用户自定义的，属于服务器层面</p>
<p><strong>使用的语法</strong></p>
<ol>
<li><p>查看所有的系统变量（全局使用<code>global</code>，会话使用<code>session</code>或者省略）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">global</span>|[<span class="keyword">session</span>] <span class="keyword">variables</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看满足条件的部分系统变量</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">global</span>|[<span class="keyword">session</span>] <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%char%'</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看指定的某个系统变量</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> @@<span class="keyword">global</span>|[<span class="keyword">session</span>].系统变量名;</span><br></pre></td></tr></table></figure>
</li>
<li><p>为某个指定的系统变量赋值</p>
<p><strong>方式一</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span>|[<span class="keyword">session</span>] 系统变量名=值;</span><br></pre></td></tr></table></figure>

<p><strong>方式二</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> @@<span class="keyword">global</span>|[<span class="keyword">session</span>].系统变量名=值;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<p><strong>全局变量的作用域</strong>：服务器每次启动将为所有的全局变量赋初始值，针对于所有的会话都有效，但是不能跨重启（即重启后会失效）</p>
<p><strong>会话变量的作用域</strong>：针对当前的会话（连接）有效</p>
<h3 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h3><p>含义：变量是用户自定义的，不是由系统提供的</p>
<p><strong>使用步骤</strong></p>
<ul>
<li>声明</li>
<li>赋值</li>
<li>使用（查看、比较、运算）</li>
</ul>
<h4 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h4><p><strong>作用域</strong>：针对当前会话（连接）有效，和会话变量的作用域相同</p>
<ol>
<li><p>声明并初始化</p>
<p><strong>方式一</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> @用户变量名=值;</span><br></pre></td></tr></table></figure>

<p><strong>方式二</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> @用户变量名:=值;</span><br></pre></td></tr></table></figure>

<p><strong>方式三</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> @用户变量名:=值;</span><br></pre></td></tr></table></figure>
</li>
<li><p>赋值（更新用户变量值）</p>
<p><strong>方式一</strong>：通过set或者select（set可以省略<code>:</code>）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>|<span class="keyword">select</span> @用户变量名:=值;</span><br></pre></td></tr></table></figure>

<p><strong>方式二</strong>：通过<code>select into</code>的方式（要求结果为一个值）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">into</span> 变量名 </span><br><span class="line"><span class="keyword">from</span> 表;</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> @用户变量名;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h4 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h4><p><strong>作用域</strong>：仅仅在定义它的<code>begin</code>、<code>end</code>中</p>
<ol>
<li><p>声明</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> 变量名 类型 [<span class="keyword">default</span> 值];</span><br></pre></td></tr></table></figure>
</li>
<li><p>赋值</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>|<span class="keyword">select</span> 局部变量名:=值;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">into</span> 局部变量名 </span><br><span class="line"><span class="keyword">from</span> 表;</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 局部变量名;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h4 id="用户变量和局部变量的对比"><a href="#用户变量和局部变量的对比" class="headerlink" title="用户变量和局部变量的对比"></a>用户变量和局部变量的对比</h4><table>
<thead>
<tr>
<th align="center"></th>
<th align="center">作用域</th>
<th align="center">定义和使用的位置</th>
<th align="center">语法</th>
</tr>
</thead>
<tbody><tr>
<td align="center">用户变量</td>
<td align="center">当前的会话</td>
<td align="center">会话中的任何位置</td>
<td align="center">必须加上@符号，不用限定类型</td>
</tr>
<tr>
<td align="center">局部变量</td>
<td align="center">begin end中</td>
<td align="center">只能在begin end中，且为第一句话</td>
<td align="center">一般不用加@符号，需要限定类型</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL变量</tag>
      </tags>
  </entry>
  <entry>
    <title>视图讲解</title>
    <url>/2020/06/24/%E8%A7%86%E5%9B%BE%E8%AE%B2%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="视图讲解"><a href="#视图讲解" class="headerlink" title="视图讲解"></a>视图讲解</h1><p><strong>概念</strong>：MySQL从5.01版本开始提供视图功能。一种虚拟存在的表，行和列的数据来自定义视图的查询中使用的表，并且是在使用视图时<strong>动态生成的</strong>，只保存了SQL逻辑，不保存查询结果</p>
<p><strong>应用场景</strong></p>
<ul>
<li>多个地方用到同样的查询结果</li>
<li>该查询结果使用的SQL语句比较复杂</li>
</ul>
<p><strong>使用示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#案例：查询姓张的学生名和专业</span></span><br><span class="line"><span class="keyword">SELECT</span> stuname, majorname </span><br><span class="line"><span class="keyword">FROM</span> stuinfo s </span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> major m</span><br><span class="line"><span class="keyword">ON</span> s.majorid=m.id </span><br><span class="line"><span class="keyword">WHERE</span> s.stuname <span class="keyword">LIKE</span> <span class="string">'张%'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建视图</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v1 <span class="keyword">AS</span> </span><br><span class="line"><span class="keyword">SELECT</span> stuname, majorname </span><br><span class="line"><span class="keyword">FROM</span> stuinfo s </span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> major m </span><br><span class="line"><span class="keyword">ON</span> s.majorid=m.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用视图查询</span></span><br><span class="line"><span class="keyword">SELECT</span> stuname, majorname </span><br><span class="line"><span class="keyword">FROM</span> v1 </span><br><span class="line"><span class="keyword">WHERE</span> stuname <span class="keyword">LIKE</span> <span class="string">'张%'</span>;</span><br></pre></td></tr></table></figure>



<p><strong>视图的好处</strong></p>
<ul>
<li>重用SQL语句</li>
<li>简化复杂的SQL操作，不必知道它的查询细节</li>
<li>保护数据，提高安全性</li>
</ul>
<h3 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h3><p><strong>语法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> 视图名 </span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line">查询语句;</span><br></pre></td></tr></table></figure>



<h3 id="修改视图"><a href="#修改视图" class="headerlink" title="修改视图"></a>修改视图</h3><p><strong>方式一</strong></p>
<p>视图存在则修改，视图不在则创建</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">view</span> 视图名</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line">查询语句;</span><br></pre></td></tr></table></figure>

<p><strong>方式二</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">view</span> 视图名 </span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line">查询语句;</span><br></pre></td></tr></table></figure>



<h3 id="删除视图"><a href="#删除视图" class="headerlink" title="删除视图"></a>删除视图</h3><p><strong>语法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> 视图名, 视图名,...;</span><br></pre></td></tr></table></figure>



<h3 id="查看视图结构"><a href="#查看视图结构" class="headerlink" title="查看视图结构"></a>查看视图结构</h3><p><strong>语法</strong></p>
<p>查询创建语句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">view</span> 视图名;</span><br></pre></td></tr></table></figure>

<p>显示视图结构</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">desc 视图名;</span><br></pre></td></tr></table></figure>



<h3 id="视图的更新"><a href="#视图的更新" class="headerlink" title="视图的更新"></a>视图的更新</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">view</span> myv1 </span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> last_name, email </span><br><span class="line"><span class="keyword">from</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">#插入</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> myv1 <span class="keyword">values</span>(<span class="string">'张三'</span>, <span class="string">'zs@qq.com'</span>);</span><br><span class="line"><span class="comment">#更新</span></span><br><span class="line"><span class="keyword">update</span> myv1 <span class="keyword">set</span> last_name=<span class="string">'李四'</span> <span class="keyword">where</span> last_name=<span class="string">'张三'</span>;</span><br><span class="line"><span class="comment">#删除</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> myv1 <span class="keyword">where</span> last_name=<span class="string">'李四'</span>;</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：对视图的更新会导致对原始表的更新，一般来说，视图不应该更新！（更新视图会导致数据不安全）</p>
<p><strong>什么情况下，视图是不可以更新的？</strong></p>
<ol>
<li><p>包含以下关键字的SQL语句：</p>
<p>分组函数：<code>distinct</code>、<code>group by</code>、<code>having</code>、<code>union</code>或者<code>union all</code></p>
</li>
<li><p>常量视图</p>
</li>
<li><p>select中包含子查询</p>
</li>
<li><p>join</p>
</li>
<li><p>from一个不能更新的视图</p>
</li>
<li><p>where子句的子查询引用了from子句中的表</p>
</li>
</ol>
<h3 id="视图和表的对比"><a href="#视图和表的对比" class="headerlink" title="视图和表的对比"></a>视图和表的对比</h3><table>
<thead>
<tr>
<th align="center"></th>
<th align="center">创建语法的关键字</th>
<th align="center">是否实际占用物理空间</th>
<th align="center">使用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">视图</td>
<td align="center"><code>create view</code></td>
<td align="center">只是保存了SQL逻辑</td>
<td align="center">增删改查，一般不使用增删改</td>
</tr>
<tr>
<td align="center">表</td>
<td align="center"><code>create table</code></td>
<td align="center">保存了数据</td>
<td align="center">增删改查</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>视图</tag>
      </tags>
  </entry>
  <entry>
    <title>存储过程和函数</title>
    <url>/2020/06/24/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="存储过程和函数"><a href="#存储过程和函数" class="headerlink" title="存储过程和函数"></a>存储过程和函数</h2><h3 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h3><p><strong>概念</strong>：一组预先编译号的SQL语句的集合，理解成批处理语句</p>
<p><strong>好处</strong>：</p>
<ol>
<li>提高了代码的复用性</li>
<li>简化了操作</li>
<li>减少了编译次数和数据库的连接次数，提高了效率</li>
</ol>
<h4 id="存储过程的语法"><a href="#存储过程的语法" class="headerlink" title="存储过程的语法"></a>存储过程的语法</h4><p><strong>创建语法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> 存储过程名(参数列表) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">	存储过程体(一组合法的<span class="keyword">SQL</span>语句)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>Tips：</p>
<ol>
<li><p>参数列表包括三部分</p>
<ul>
<li>参数模式<ul>
<li><code>in</code>：该参数可以作为输入，也就是说该参数需要调用方传入值</li>
<li><code>out</code>：该参数可以作为输出，也就是该参数可以作为返回值</li>
<li><code>inout</code>：该参数既可以作为输入，也可以作为输出。既需要传入值，也可以返回值</li>
</ul>
</li>
<li>参数名</li>
<li>参数类型</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#参数示例</span></span><br><span class="line">in stuname varchar(20)</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果存储过程只有一句SQL，那么<code>begin end</code>可以省略</p>
</li>
<li><p>存储过程体中的每条SQL语句的结尾都要求加上<code>;</code>，存储过程的结尾可以使用<code>delimiter</code>重新设置</p>
</li>
</ol>
<p><strong>调用语法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> 存储过程名(实参列表);</span><br></pre></td></tr></table></figure>





<p><strong>空参存储过程</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#向admin表中插入五条记录</span></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> myp1()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">admin</span>(username, <span class="string">`password`</span>) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">'张三'</span>,<span class="string">'10001'</span>), </span><br><span class="line">    (<span class="string">'李四'</span>,<span class="string">'10002'</span>), </span><br><span class="line">    (<span class="string">'王五'</span>,<span class="string">'10003'</span>), </span><br><span class="line">    (<span class="string">'王二'</span>,<span class="string">'10004'</span>), </span><br><span class="line">    (<span class="string">'李明'</span>,<span class="string">'10005'</span>);</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line"><span class="keyword">CALL</span> myp1();</span><br></pre></td></tr></table></figure>



<p><strong>带in模式参数的存储过程</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建存储过程，判断是定用户名和密码是否能够登录成功</span></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> login (</span><br><span class="line">  <span class="keyword">IN</span> username <span class="built_in">VARCHAR</span> (<span class="number">20</span>),</span><br><span class="line">  <span class="keyword">IN</span> <span class="string">`password`</span> <span class="built_in">VARCHAR</span> (<span class="number">20</span>)</span><br><span class="line">) </span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">DECLARE</span> <span class="keyword">result</span> <span class="built_in">INT</span> ;</span><br><span class="line">  <span class="keyword">SELECT</span> </span><br><span class="line">    <span class="keyword">COUNT</span>(*) <span class="keyword">INTO</span> <span class="keyword">result</span> </span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    <span class="keyword">admin</span> </span><br><span class="line">  <span class="keyword">WHERE</span> admin.username = username </span><br><span class="line">    <span class="keyword">AND</span> admin.<span class="string">`password`</span> = <span class="string">`password`</span> ;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">IF</span>(<span class="keyword">result</span>&gt;<span class="number">0</span>,<span class="string">'登录成功'</span>, <span class="string">'登录失败'</span>) <span class="keyword">AS</span> 登录结果;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line"><span class="keyword">CALL</span> login(<span class="string">'张三'</span>,<span class="string">'10001'</span>);</span><br></pre></td></tr></table></figure>

<p><strong>带out模式参数的存储过程</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询admin表中的记录数</span></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> total(<span class="keyword">OUT</span> <span class="keyword">num</span> <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">INTO</span> <span class="keyword">num</span> <span class="keyword">FROM</span> <span class="keyword">admin</span>;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">num</span>=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> total(@<span class="keyword">num</span>);</span><br><span class="line"><span class="keyword">SELECT</span> @<span class="keyword">num</span>;</span><br></pre></td></tr></table></figure>

<p><strong>带inout模式参数的存储过程</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#传入两个值a、b，翻倍后返回</span></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> twice_as_much(INOUT a <span class="built_in">INT</span>, INOUT b <span class="built_in">INT</span>) </span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">SET</span> a=a*<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">SET</span> b=b*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="keyword">SET</span> @a=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">SET</span> @b=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">CALL</span> twice_as_much(@a,@b);</span><br><span class="line"><span class="keyword">SELECT</span> @a, @b;</span><br></pre></td></tr></table></figure>



<h4 id="存储过程的删除"><a href="#存储过程的删除" class="headerlink" title="存储过程的删除"></a>存储过程的删除</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">procedure</span> 存储过程名;</span><br></pre></td></tr></table></figure>



<h4 id="存储过程的查看"><a href="#存储过程的查看" class="headerlink" title="存储过程的查看"></a>存储过程的查看</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">procedure</span> 存储过程名;</span><br></pre></td></tr></table></figure>



<p><strong>注意</strong>：存储过程不能修改，只能删除后重新创建</p>
<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p><strong>概念</strong>：一组预先编译好的SQL语句集合，可以理解成批处理语句。</p>
<p><strong>好处</strong>：</p>
<ol>
<li>提高了代码的复用性</li>
<li>简化了操作</li>
<li>减少了编译次数以及数据库服务器的连接次数，提高了效率</li>
</ol>
<h4 id="创建语法"><a href="#创建语法" class="headerlink" title="创建语法"></a>创建语法</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> 函数名(参数列表) <span class="keyword">returns</span> 返回类型</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  函数体</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：</p>
<ol>
<li>参数列表包括两部分<ul>
<li>参数名</li>
<li>参数类型</li>
</ul>
</li>
<li>函数体：肯定有return语句，如果没有会报错</li>
<li>函数体中仅有一句SQL语句时，可以省略<code>begin end</code></li>
<li>使用<code>delimiter</code>设置结束标记</li>
</ol>
<h4 id="调用语法"><a href="#调用语法" class="headerlink" title="调用语法"></a>调用语法</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 函数名(参数列表);</span><br></pre></td></tr></table></figure>

<p><strong>使用示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询用户名包含指定字符的admin表中的记录数</span></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> get_admin_count(<span class="keyword">str</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>)) <span class="keyword">RETURNS</span> <span class="built_in">INT</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">DECLARE</span> c <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>; </span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">INTO</span> c <span class="keyword">FROM</span> <span class="keyword">admin</span> <span class="keyword">WHERE</span> admin.username <span class="keyword">LIKE</span> <span class="keyword">CONCAT</span>(<span class="string">'%'</span>,<span class="keyword">str</span>,<span class="string">'%'</span>);</span><br><span class="line">  RETURN c;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line"><span class="keyword">SELECT</span> get_admin_count(<span class="string">'王'</span>);</span><br></pre></td></tr></table></figure>



<h4 id="函数的查看和删除"><a href="#函数的查看和删除" class="headerlink" title="函数的查看和删除"></a>函数的查看和删除</h4><p><strong>查看函数</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">function</span> 函数名;</span><br></pre></td></tr></table></figure>

<p><strong>删除函数</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">function</span> 函数名;</span><br></pre></td></tr></table></figure>



<h4 id="函数与存储过程的区别"><a href="#函数与存储过程的区别" class="headerlink" title="函数与存储过程的区别"></a>函数与存储过程的区别</h4><p><strong>存储过程</strong>：可以有0个或多个返回值，适合做批量插入、批量更新</p>
<p><strong>函数</strong>：有且仅有一个返回值，适合处理数据之后返回一个结果</p>
]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>存储过程</tag>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>流程控制结构:</title>
    <url>/2020/06/24/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h2 id="流程控制结构"><a href="#流程控制结构" class="headerlink" title="流程控制结构"></a>流程控制结构</h2><h3 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h3><h4 id="if函数"><a href="#if函数" class="headerlink" title="if函数"></a>if函数</h4><p><strong>功能</strong>：实现简单的双分支</p>
<p><strong>语法</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">if(表达式1, 表达式2, 表达式3)</span><br></pre></td></tr></table></figure>

<p>如果表达式1返回true，则返回表达式2的值，否则返回表达式3的值</p>
<h4 id="case结构"><a href="#case结构" class="headerlink" title="case结构"></a>case结构</h4><p>如果是语句，则使用<code>end case</code>否则使用<code>end</code></p>
<p><strong>情况一</strong>：类似于Java中的switch语句，一般用于实现等值判断</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">case 变量|表达式|字段</span><br><span class="line">when 要判断的值 then 返回的值1|语句;</span><br><span class="line">when 要判断的值 then 返回的值2|语句;</span><br><span class="line">...</span><br><span class="line">else 要返回的值n|语句;</span><br><span class="line"><span class="keyword">end</span> 【<span class="keyword">case</span>】</span><br></pre></td></tr></table></figure>



<p><strong>情况二</strong>：类似于Java中的多重if语句，一般用于实现区间判断</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">case</span><br><span class="line">when 要判断的条件1 then 返回值1|语句;</span><br><span class="line">when 要判断的条件2 then 返回值2|语句;</span><br><span class="line">...</span><br><span class="line">else 要返回值的值n|语句;</span><br><span class="line"><span class="keyword">end</span> 【<span class="keyword">case</span>】</span><br></pre></td></tr></table></figure>

<p><strong>特点</strong>：</p>
<ul>
<li>可以作为表达式，嵌套在其他语句中使用，可以放在任何地方</li>
<li>可以作为独立的语句去使用，此时只能放在<code>begin end</code>中</li>
<li>如果else省略且所有的条件都不满足，则返回null</li>
</ul>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#案例</span></span><br><span class="line"><span class="comment">#创建存储过程，根据传入的成绩来显示等级</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> test_case;</span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_case(<span class="keyword">IN</span> score <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">	<span class="keyword">CASE</span></span><br><span class="line">	<span class="keyword">WHEN</span> score &gt;= <span class="number">90</span> <span class="keyword">AND</span> score &lt;= <span class="number">100</span> <span class="keyword">THEN</span> <span class="keyword">SELECT</span> <span class="string">'A'</span>;</span><br><span class="line">	WHEN score &gt;= 80 THEN SELECT 'B';</span><br><span class="line">	WHEN score &gt;= 60 THEN SELECT 'C';</span><br><span class="line">	ELSE <span class="keyword">SELECT</span> <span class="string">'D'</span>;</span><br><span class="line">	<span class="keyword">END</span> <span class="keyword">CASE</span>;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line"><span class="keyword">CALL</span> test_case(<span class="number">95</span>);</span><br></pre></td></tr></table></figure>



<h4 id="if结构"><a href="#if结构" class="headerlink" title="if结构"></a>if结构</h4><p><strong>功能</strong>：实现多重分支</p>
<p><strong>语法</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">if 条件1 then 语句1;</span><br><span class="line">elseif 条件2 then 语句2;</span><br><span class="line">...</span><br><span class="line">【else 语句n;】</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span>;</span><br></pre></td></tr></table></figure>



<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#3.if结构</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> test_if;</span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> test_if(score <span class="built_in">INT</span>) <span class="keyword">RETURNS</span> <span class="built_in">CHAR</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">	<span class="keyword">IF</span> score&gt;=<span class="number">90</span> <span class="keyword">AND</span> score&lt;=<span class="number">100</span> <span class="keyword">THEN</span> <span class="keyword">RETURN</span> <span class="string">'A'</span>;</span><br><span class="line">	ELSEIF score&gt;=80 THEN RETURN 'B';</span><br><span class="line">	ELSEIF score&gt;=60 THEN RETURN 'C';</span><br><span class="line">	ELSE RETURN 'D';</span><br><span class="line">	<span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line"><span class="keyword">SELECT</span> test_if(<span class="number">55</span>);</span><br></pre></td></tr></table></figure>



<h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><p>分类：</p>
<ul>
<li><code>while</code></li>
<li><code>loop</code></li>
<li><code>repeat</code></li>
</ul>
<p><strong>循环控制</strong></p>
<p><code>iterate</code>类似于Java中的<code>continue</code></p>
<p><code>leave</code>类似于Java中的<code>break</code></p>
<h4 id="while"><a href="#while" class="headerlink" title="while"></a>while</h4><p><strong>语法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">【标签:】 while 循环条件 <span class="keyword">do</span> </span><br><span class="line">	循环体</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">while</span> 【标签】;</span><br></pre></td></tr></table></figure>

<h4 id="loop"><a href="#loop" class="headerlink" title="loop"></a>loop</h4><p><strong>语法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">【标签:】 loop</span><br><span class="line">	循环体</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">loop</span> 【标签】;</span><br></pre></td></tr></table></figure>

<p>如果没有循环控制的话就是死循环，可以用来模拟简单的死循环</p>
<h4 id="repeat"><a href="#repeat" class="headerlink" title="repeat"></a>repeat</h4><p><strong>语法</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">【标签:】 repeat</span><br><span class="line">	循环体</span><br><span class="line">until 结束循环的条件</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">repeat</span> 【标签】;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>流程控制</tag>
      </tags>
  </entry>
  <entry>
    <title>DCL语言学习</title>
    <url>/2020/06/25/DCL%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="DCL语言学习"><a href="#DCL语言学习" class="headerlink" title="DCL语言学习"></a>DCL语言学习</h2><p>DCL：Data Control Language，数据控制语言，用于数据库权限管理</p>
<p>MySQL的账户信息保存在<code>mysql</code>这个数据库中</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USE</span> mysql;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">user</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>



<h3 id="创建账户"><a href="#创建账户" class="headerlink" title="创建账户"></a>创建账户</h3><p>新创建的账户没有任何权限</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> 用户名@host <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'密码'</span>;</span><br></pre></td></tr></table></figure>



<h3 id="修改账户名"><a href="#修改账户名" class="headerlink" title="修改账户名"></a>修改账户名</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RENAME</span> <span class="keyword">USER</span> 旧账户名@host <span class="keyword">TO</span> 新账户名;</span><br></pre></td></tr></table></figure>



<h3 id="删除账户"><a href="#删除账户" class="headerlink" title="删除账户"></a>删除账户</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> 账户名@host;</span><br></pre></td></tr></table></figure>



<h3 id="查看权限"><a href="#查看权限" class="headerlink" title="查看权限"></a>查看权限</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> 账户名@host;</span><br></pre></td></tr></table></figure>



<h3 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> 权限列表 <span class="keyword">ON</span> 数据库名.* <span class="keyword">TO</span> 用户名@host;</span><br></pre></td></tr></table></figure>



<h3 id="删除权限"><a href="#删除权限" class="headerlink" title="删除权限"></a>删除权限</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">REMOVE 权限列表 ON 数据库.* FROM 用户名@host;</span><br></pre></td></tr></table></figure>



<h3 id="更改密码"><a href="#更改密码" class="headerlink" title="更改密码"></a>更改密码</h3><p>必须使用<code>password()</code>函数进行加密</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> 用户名@host = <span class="keyword">PASSWORD</span>(<span class="string">'新密码'</span>);</span><br></pre></td></tr></table></figure>



<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol>
<li><code>用户名@host</code>也可以写成<code>用户名</code>，此时相当于<code>用户名@%</code>使用的是默认主机名</li>
<li>GRANT和REVOKE可在几个层次上控制访问权限<ul>
<li>整个服务器，使用 <code>GRANT ALL</code> 和<code>REVOKE ALL</code>；</li>
<li>整个数据库，使用 <code>ON database.*</code>；</li>
<li>特定的表，使用 <code>ON database.table</code>；</li>
<li>特定的列；</li>
<li>特定的存储过程。</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>DCL</tag>
      </tags>
  </entry>
  <entry>
    <title>索引</title>
    <url>/2020/06/25/%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>索引</tag>
      </tags>
  </entry>
</search>
